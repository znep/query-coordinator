#! /usr/bin/env ruby

require 'localeapp'
require 'digest/sha1'
require 'json'
require 'httparty'

# Overriding LocaleApp's default #report_success method
# so we can get access to the job_id within the response
class Pusher < Localeapp::CLI::Push
  def report_success(response)
    super
    $locale_app_success_response = response
  end
end

# Using SHA1 hashed versions of each project's API key to compare and
# make sure that we are passing the right key for the right project
LOCALEAPP_API_SHA1_HASHES = {
  'frontend'    => '131fd3637b02a3e6a2d3df2876004001241a335d',
  'storyteller' => 'd06490152734d914415715129906dcdc816dbcbc',
  'common'      => 'be872d6478b160725d25ba9229b61b2cbd861d75'
}

project_name = ARGV[0]
api_key = ARGV[1]

if ARGV.length != 2
  puts 'Usage: push_locale <frontend|storyteller|common> <api_key_for_project>'
  puts 'API key can be read from LastPass \'LocaleApp\' note or directly in LocaleApp UI'
  exit(1)
end

file_directory = File.dirname(__FILE__)

## Check for project name
path = case project_name
  when 'frontend'
    File.expand_path('../frontend/config/locales/en.yml', file_directory)
  when 'storyteller'
    File.expand_path('../storyteller/config/locales/en.yml', file_directory)
  when 'common'
    File.expand_path('../common/i18n/locales/en.yml', file_directory)
  else
    puts "Project name should be one of: #{LOCALEAPP_API_SHA1_HASHES.keys}"
    exit(1)
  end

api_key_digest = Digest::SHA1.hexdigest(api_key)
expected_hash = LOCALEAPP_API_SHA1_HASHES[project_name]

if expected_hash != api_key_digest
  puts "Expected: '#{project_name}' to have a Localeapp API key hash of: #{expected_hash}"
  puts "Are you sure you're using the right API key for this project?"
  puts "If you updated the API key in Localeapp, then please make sure LastPass is up to date and edit LOCALEAPP_API_SHA1_HASHES within this script to include:"
  puts "'#{project_name}' => '#{api_key_digest}'"
  exit(1)
end

puts "Pushing locales from: #{path}"

pusher = Pusher.new({k: api_key})
pusher.execute(path)

# handle execute error
if $locale_app_success_response.nil? # never reached report_success
  puts 'Push failed'
  exit(1)
end

response = JSON.parse($locale_app_success_response)
job_id = response['id']

if job_id.nil?
  puts 'Couldn\'t find a job ID, unable to poll'
  exit(0)
end

# Poll localeapp api until push job is complete
begin
  puts "Checking LocaleApp job #{job_id} status..."
  sleep 3
  job_status = HTTParty.get("https://api.localeapp.com/v1/projects/#{api_key}/imports.json")
  job_complete = job_status.parsed_response['imports'].any? { |job| job['id'] == job_id && job['state'] == 'succeeded' }
end until job_complete

puts "Job: #{job_id} complete!"

