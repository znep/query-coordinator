<%- content_for(:wrapper_class, "dialogGrayColumn") -%>
<% content_for :headline do %>
<script>

blist.namespace.fetch('blist.columns.properties');
var column = blist.columns.properties.column = <%= @column.to_js %>;
</script>

<h1 id="title" class="columnPropertiesIcon"><%= h(@column.name) %></h1>
<% end %>

<div id='columnPropertiesDialog' class="columnPropertiesWrapper">
  <div id="loadingSpinner"></div>
  <% form_tag "#", :id => "columnProperties" do %>
    <div class="tabWrapper">
      <div class="tabs">
        <ul class="tabSelector">
          <li><a id="general" href="#" class="selected">General</a></li>
          <% if @column.has_formatting? %>
              <li><a id="formatting" href="#">Formatting</a></li>
          <% end %>
          <% if @column.has_totals? %>
              <li><a id="totals" href="#">Column Totals</a></li>
          <% end %>
          <%#<li><a id="defaults" href="#">Default Values</a></li> %>
        </ul>
      </div>

      <%# Default values tab %>
      <%#
        <div id="defaultsTab" class="tabContent">
          <h3>Apply a Default Cell Value</h3>
          <h4 class="subtitle seperator">What you enter here will appear by default in every cell for this column</h4>
        </div>
      %>

      <%# Column totals tab %>
      <%- if @column.has_totals? %>
      <div id="totalsTab" class="tabContent">
        <h3>Column Total Options</h3>
        <h4 class="subtitle seperator">Totals will appear at the bottom of the column while in table display mode</h4>
      </div>
      <% end %>

      <%# Formatting tab %>
      <%- if @column.has_formatting? %>
      <div id="formattingTab" class="tabContent">
        <h3 class="seperator">Alignment Options</h3>
        <ul class="alignment">
          <li><p>Justify:</p></li>
          <li>
            <%= radio_button("column", "alignment", "left",
            :checked => @column.alignment == "left") %>
            <label for="column_alignment_left" class="align alignLeft">Left</label>
          </li>
          <li>
            <%= radio_button("column", "alignment", "center",
            :checked => @column.alignment == "center") %>
            <label for="column_alignment_center"
              class="align alignCenter">Centered</label>
          </li>
          <li>
            <%= radio_button("column", "alignment", "right",
            :checked => @column.alignment == "right") %>
            <label for="column_alignment_right"
              class="align alignRight">Right</label>
          </li>
        </ul>

        <%- if @column.dataType.type == 'picklist' -%>
        <h3 class='seperator'>Picklist Values</h3>
        <%= render(:partial => 'picklist_manager') %>
        <%- end -%>
      </div>
      <%- end %>

      <%# General properties tab %>
      <div id="generalTab" class="tabContent">
        <table cellspacing="0">
          <tbody>
            <tr>
              <td colspan="2"><h3 class="seperator">Column Details</h3></td>
            </tr>
            <tr>
              <td class="labelColumn">
                <label for="name" class="required">Column Name:</label>
              </td>
              <td class="fieldColumn">
                <%= text_field_tag("name", @column.name, :id => "name") %>
              </td>
            </tr>
            <tr>
              <td class="labelColumn">
                <label for="description">Column Description:</label>
              </td>
              <td class="fieldColumn">
                <%= text_area_tag("description", @column.description,
                :class => "textPrompt" +
                  (@column.description.blank? ? " prompt": ""),
                :title => "Enter a description.", :id => "description") %>
              </td>
            </tr>
            <tr>
              <td colspan="2"><h3 class="seperator">Type of Column</h3></td>
            </tr>
            <tr>
              <td class="labelColumn"><label for="type">Type:</label></td>
              <td class="fieldColumn middle">
                <strong id="typeReadOnly"
                  class="datatype-<%= @column.client_type %>">
                  <%= Column.types[@column.client_type] %>
                </strong>
                <% if @column.convertable_types.size > 0 %>
                  <a id="converter" class="convertDropdown" href="#">Change</a>
                <% end %>
              </td>
            </tr>
            <tr>
                <td class="labelColumn"></td>
                <td class="fieldColumn">
                    <div id="convertables">
                      <ul class="convertables">
                        <% @column.convertable_types.each do |type| %>
                          <li>
                            <a id="<%=type%>"
                              class="convert datatype-<%=type%>" href="#">
                              <%= Column.types[type] %>
                            </a>
                          </li>
                        <% end %>
                      </ul>
                    </div>
                </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="saveBar">
        <div class="error errorMessage"></div>
        <h3 class="seperator"></h3>
        <div class="controlBar">
          <div class="required">Required Field</div>
          <ul class='actionButtons clearfix'>
            <li><a href='#' class='save arrowButton'>Save</a></li>
          </ul>
          </div>
        </div>
    </div>
    <%# Firefox won't trigger submit events unless there is a submit button %>
    <input class='hidden' type='submit' />
  <% end %>
</div>

<script type="text/javascript" charset="utf-8">
$(function()
{
  $("#columnPropertiesDialog #loadingSpinner").hide();
  $("#columnPropertiesDialog .error").hide();
  $("#columnPropertiesDialog #convertables").hide();

  <%- if @column.dataType.type == 'picklist' -%>
  picklistManagerSetup();
  <%- end -%>

  var loading = function()
  {
    $("#columnPropertiesDialog #loadingSpinner")
      .css("left", 150 + $("#columnPropertiesDialog #generalTab").width() / 2);
    $("#columnPropertiesDialog #loadingSpinner").show();
  }

  var formEnabled = true;
  var toggleEnabled = function()
  {
    $("#columnPropertiesDialog.columnPropertiesWrapper :input")
      .attr("disabled", formEnabled);
    formEnabled = !formEnabled;
  }

  // Since these widgets are created live, we have to populate the default
  // text prompt values manually instead of relying on the plugin.
  $("#columnPropertiesDialog .textPrompt")
    .example(function () { return $(this).attr("title"); });

  var selectTab = function(which)
  {
    $("#columnPropertiesDialog #generalTab").hide();
    $("#columnPropertiesDialog #formattingTab").hide();
    $("#columnPropertiesDialog #totalsTab").hide();
    $("#columnPropertiesDialog #defaultsTab").hide();

    $("#columnPropertiesDialog #" + which + "Tab").show();
  };

  // Select tabs on hover.
  $("#columnPropertiesDialog ul.tabSelector > li > a").hover(function() {
    if (!formEnabled) { return false; }
    $("#columnPropertiesDialog ul.tabSelector > li > a").removeClass("selected");
    $(this).addClass("selected");
    selectTab(this.id);
  });

  // Default the selected tab to "general"
  selectTab("general");

  <% if @column.has_display_options? %>
    $("#columnPropertiesDialog #formattingTab").columnFormat(column);
  <% end %>
  <% if @column.has_totals? %>
    $("#columnPropertiesDialog #totalsTab").columnTotals(column);
  <% end %>


  // Keep the column model up to date so we don't have to read from the form to
  // update the properties.
  $("#columnPropertiesDialog #name")
    .change(function() { column.name = $(this).val() });
  $("#columnPropertiesDialog #description")
    .change(function() { column.description = $(this).val() });
  $('#columnPropertiesDialog #column_alignment_left,' +
      '#columnPropertiesDialog #column_alignment_center,' +
      '#columnPropertiesDialog #column_alignment_right')
    .change(function() { column.alignment = $(this).val() });
  $("#columnPropertiesDialog #precision")
    .change(function() { column.decimalPlaces = $(this).val() });
  $("#columnPropertiesDialog #ui-spinner-precision > .ui-spinner-button")
    .click(function() { column.decimalPlaces =
        $("#columnPropertiesDialog #precision").val() });

  var save = function() {
      $.ajax({
        type: "PUT",
        url: '<%= @column.href(@view_id)%>',
        cache: false,
        data: {
          json: $.json.serialize(column),
          authenticity_token: "<%= form_authenticity_token %>"
          },
        dataType: 'json',
        error: function(request) {
          $("#columnPropertiesDialog .error")
            .html($.json.deserialize(request.responseText).error).show();
        },
        success: function(responseData) {
            var $grid = $("#dataGrid");
            if ($grid.length != 0)
            {
                $grid.blistModel().updateColumn(responseData);
            }
            $(document).trigger(blist.events.COLUMNS_CHANGED, [<%= @column.id %>]);
            $("#modal .jqmClose").click();
        }
      });
  };

  var converting = false;
  $("#columnPropertiesDialog a.convert").click(function(e) {
    e.preventDefault();
    if (converting) { return false; }
    converting = true;
    $("#columnPropertiesDialog a.convert").addClass("light");
    $(this).removeClass("light");
    loading();

    var type = $(this).attr("id");

    if (type == "richtext" && column.type == "text")
    {
      column.type = "richtext";
      save();
    }
    else if (type == "text" && column.type == "richtext")
    {
      column.type = "text";
      save();
    }
    else
    {
      $.ajax({
        type: "POST",
        url: '<%= @column.convert_href(@view_id) %>&type=' + $(this).attr('id'),
        cache: false,
        dataType: 'json',
        contentType: "application/json",
        error: function(request) {
          $("#columnPropertiesDialog .error")
            .html($.json.deserialize(request.responseText).message).show();
        },
        success: function (responseData) {
          $("#modal .jqmClose").click();
          $("#dataGrid").blistModel()
            .convertColumn(<%= @column.id %>, responseData);
          $(document).trigger(blist.events.COLUMNS_CHANGED, [<%= @column.id %>]);
        }
      });
    }
  });

  $("#columnPropertiesDialog #converter").click(function(e) {
      e.preventDefault();
      toggleEnabled();
      $("#columnPropertiesDialog #convertables").toggle();
      return false;
  });

  $("#columnPropertiesDialog #columnProperties").submit( function(e) {
      e.preventDefault();
      if (!formEnabled) { return false; }
      toggleEnabled();

      save();
  });

  $("#columnPropertiesDialog .save").click(function(e) {
      e.preventDefault();
      if (!formEnabled) { return false; }
      toggleEnabled();

      save();
  });
});
</script>
