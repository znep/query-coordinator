<% content_for :head do %>
  <title>Example Usage: SvgBarChart.js</title>
  <meta charset="utf-8">
  <meta http-equiv="content-type" content="text/html; charset=UTF8">
  <%= rendered_stylesheet_tag 'visualizations' %>
  <style type="text/css">
    [id^="bar-chart"] {
      display: block;
      position: relative;
      width: 640px;
      height: 480px;
      margin: 100px auto;
    }

    .school-district-proficiency,
    .wright-county-final-payments,
    .ufo-sightings-total-row-count,
    .pet-escapes-total-row-count {
      font-weight: bold;
      text-decoration: underline;
    }
  </style>
<% end %>

<% content_for :scripts do %>
  <%= render_feature_flags_for_javascript %>

  <%= include_webpack_bundle 'visualization_example_pages/main.js' %>

  <script type="text/javascript">

    $(document).ready(function() {

      function fillInExpectedValues() {

        // Fetch the current sum of `proficient_2` for the iowa schools dataset where `topic` = 'Math' and `grade` = '3' and `school_year` = '2014'
        $.ajax({
          url: 'https://data.iowa.gov/api/id/mu6e-brbz.json?$query=SELECT SUM(`proficient_2`) WHERE `topic` = \'Math\' AND `grade` = \'3\' AND `school_year` =\'2014\'',
          success: function(result) {
            $('.school-district-proficiency').text(_.get(result, '[0].SUM_proficient_2'));
          }
        });

        // Fetch the current sum of `final_payments` for the iowa payments dataset where `county_name` = 'Wright'
        $.ajax({
          url: 'https://data.iowa.gov/api/id/yhbr-3t8a.json?$query=SELECT SUM(`final_payments`) WHERE `county_name` = \'Wright\'',
          success: function(result) {
            $('.wright-county-final-payments').text(_.get(result, '[0].sum_final_payments'));
          }
        });

        // Fetch the current total row count for the pet escapes dataset
        $.ajax({
          url: 'https://vertex-stories.test-socrata.com/api/id/k6cs-ww27.json?$query=SELECT COUNT(*)',
          success: function(result) {
            $('.ufo-sightings-total-row-count').text(_.get(result, '[0].COUNT'));
          }
        });

        // Fetch the current total row count for the pet escapes dataset
        $.ajax({
          url: 'https://stories.rc-socrata.com/api/id/hw9q-ds2z.json?$query=SELECT COUNT(*)',
          success: function(result) {
            $('.pet-escapes-total-row-count').text(_.get(result, '[0].COUNT'));
          }
        });
      }

      /**
       * Set up VIFs
       */

      var DIMENSION = 'district_name';
      var MEASURE = 'proficient_2';
      var MEASURE_AGGREGATION = null;
      var DATASET_UID = 'mu6e-brbz';
      var DOMAIN = 'data.iowa.gov';
      var FILTERS = [
        {
          columnName: 'topic',
          function: 'binaryOperator',
          arguments: {
            operator: '=',
            operand: 'Math'
          },
          pivot: true
        },
        {
          columnName: 'grade',
          function: 'binaryOperator',
          arguments: {
            operator: '=',
            operand: '3'
          },
          pivot: true
        },
        {
          columnName: 'school_year',
          function: 'binaryOperator',
          arguments: {
            operator: '=',
            operand: '2014'
          },
          pivot: true
        }
      ];

      var barChart1Vif = {
        format: {
          type: 'visualization_interchange_format',
          version: 2
        },
        configuration: {
          showDimensionLabels: true,
          showLegend: true,
          xAxisScalingMode: 'pan',
          viewSourceDataLink: true,
        },
        description: 'Description',
        series: [
          {
            color: {
              primary: '#71abd9',
              secondary: '#71abd9',
              highlight: '#cccccc',
              palette: 'categorical'
            },
            dataSource: {
              datasetUid: 'r6t9-rak2',
              dimension: {
                columnName: 'neighborhood',
                aggregationFunction: null,
                grouping: {
                  columnName: 'category'
                }
              },
              domain: 'dataspace.demo.socrata.com',
              measure: {
                columnName: null,
                aggregationFunction: 'count'
              },
              orderBy: {
                parameter: 'measure',
                sort: 'desc'
              },
              type: 'socrata.soql',
              filters: []
            },
            label: null,
            type: 'barChart',
            unit: {
              one: 'case',
              other: 'cases'
            },
            stacked: true
          }
        ],
        title: 'Incidences per neighborhood stacked by category'
      };

      var barChart2Vif = {
        format: {
          type: 'visualization_interchange_format',
          version: 2
        },
        configuration: {
          showDimensionLabels: true,
          showLegend: true,
          measureAxisMaxValue: 10000,
          measureAxisMinValue: 5000,
          viewSourceDataLink: true,
          xAxisScalingMode: 'pan',
        },
        description: '',
        series: [
          {
            color: {
              primary: '#71abd9',
              secondary: '#71abd9',
              highlight: '#cccccc',
              palette: 'categorical'
            },
            dataSource: {
              datasetUid: 'r6t9-rak2',
              dimension: {
                columnName: 'neighborhood',
                aggregationFunction: null,
                grouping: {
                  columnName: 'category'
                }
              },
              domain: 'dataspace.demo.socrata.com',
              measure: {
                columnName: null,
                aggregationFunction: 'count'
               },
              orderBy: {
                parameter: 'measure',
                sort: 'desc'
              },
              type: 'socrata.soql',
              filters: []
            },
            label: null,
            type: 'barChart',
            unit: {
              one: 'case',
              other: 'cases'
            },
            stacked: true
          }
        ],
        title: 'Incidences per neighborhood stacked by category - (5,000 to 10,000)'
      };

      var barChart3Vif = {
        format: {
          type: 'visualization_interchange_format',
          version: 2
        },
        configuration: {
          showDimensionLabels: true,
          showLegend: true,
          showValueLabels: true,
          viewSourceDataLink: true,
          xAxisScalingMode: 'pan',          
        },
        description: '',
        series: [
          {
            color: {
              primary: '#71abd9',
              secondary: '#71abd9',
              highlight: '#cccccc',
              palette: 'categorical'
            },
            dataSource: {
              datasetUid: 'k6cs-ww27',
              dimension: {
                columnName: 'blood_alcohol_level',
                aggregationFunction: null,
                grouping: {
                  columnName: 'plausibility'
                }
              },
              domain: 'vertex-stories.test-socrata.com',
              measure: {
                columnName: null,
                aggregationFunction: 'count'
              },
              orderBy: {
                parameter: 'measure',
                sort: 'desc'
              },
              type: 'socrata.soql',
              filters: []
            },
            label: null,
            type: 'barChart',
            unit: {
              one: 'Row',
              other: 'Rows'
            },
            stacked: true
          }
        ],
        title: 'UFO sightings by blood alcohol level stacked by plausibility'
      };

      /**
       * Instantiate the plugins
       */

      var flyoutRenderer = new socrata.visualizations.views.FlyoutRenderer();

      $('[id^=bar-chart-]').on(
        'SOCRATA_VISUALIZATION_FLYOUT',
        handleFlyout
      );
      $('[id^=bar-chart-]').on(
        'SOCRATA_VISUALIZATION_VIF_UPDATED',
        handleVifUpdated
      );

      $('#bar-chart-1').socrataSvgBarChart(barChart1Vif);
      $('#bar-chart-2').socrataSvgBarChart(barChart2Vif);
      $('#bar-chart-3').socrataSvgBarChart(barChart3Vif);

      fillInExpectedValues();

      /**
       * Handle plugin events
       */

      function handleFlyout(event) {
        var payload = event.originalEvent.detail;

        // Render/hide a flyout
        if (payload !== null) {
          flyoutRenderer.render(payload);
        } else {
          flyoutRenderer.clear();
        }
      }

      function handleVifUpdated(event) {
        var payload = event.originalEvent.detail;
        var renderVifEvent = jQuery.Event('SOCRATA_VISUALIZATION_RENDER_VIF');

        renderVifEvent.originalEvent = {
          detail: payload
        };

        $(this).trigger(renderVifEvent);
      }

      /**
       * How to destroy the plugin:
       */

      // $('#bar-chart-1').off('SOCRATA_VISUALIZATION_FLYOUT', handleFlyout);
      // $('#bar-chart-1').off('SOCRATA_VISUALIZATION_VIF_UPDATED', handleVifUpdated);
      // $('#bar-chart-1').trigger('SOCRATA_VISUALIZATION_DESTROY');
    });
  </script>
<% end %>

<a href="/internal">Internal Panel Home</a><br>
<a href="/internal/demos/visualizations">Back to demo list</a>
<div id="bar-chart-1"></div>
<div id="bar-chart-2"></div>
<div id="bar-chart-3"></div>
