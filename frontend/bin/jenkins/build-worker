#! /usr/bin/env bash
#!/bin/bash
set -xe

uname -a
lsb_release -a

mkdir -p /home/jenkins/workspace
cp -r /mnt/build-worker_frontend /home/jenkins/workspace/
export HOME=/home/jenkins
cd ${HOME}/workspace/build-worker_frontend

# Grab npm secrets
sudo cp /tmp/build_home/.npmrc ${HOME}/.npmrc
sudo chown jenkins ${HOME}/.npmrc
# Grab bundle secrets
mkdir -p ${HOME}/.bundle
sudo cp /tmp/build_home/.bundle/config ${HOME}/.bundle/config
sudo chown jenkins ${HOME}/.bundle/config

cp frontend/Gemfile ${HOME}
cp frontend/Gemfile.lock ${HOME}
cp frontend/package.json ${HOME}
cp .ruby-version ${HOME}
sudo mkdir /home/common
sudo cp -R common/site_chrome /home/common/site_chrome

cd ${HOME}

# Environment vars
export LANG=en_US.UTF-8
export CXX=g++-4.8

###########################################
# Install Chrome
sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
sudo DEBIAN_FRONTEND=noninteractive apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y google-chrome-stable
sudo ln -s `which google-chrome-stable` /usr/local/bin/chrome

###########################################
# Install PhantomJS 2.1.1
# EN-15744 (Giacomo): This is very likely not needed anymore. Verifying.
#sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libfontconfig1 bzip2
#sudo mkdir -p /usr/local/share/phantomjs
#sudo wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
#sudo tar xjf phantomjs-2.1.1-linux-x86_64.tar.bz2 --strip=1 -C /usr/local/share/phantomjs
#sudo rm -f phantomjs-2.1.1-linux-x86_64.tar.bz2
#sudo ln -fs /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin/phantomjs

###########################################
# Packages required for our ruby installation
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            autoconf \
            bison \
            build-essential \
            curl \
            docker.io \
            fontconfig \
            gnome-common \
            libffi-dev \
            libgdbm-dev \
            libgdbm3 \
            libncurses5-dev \
            libreadline6-dev \
            libssl-dev \
            libtool \
            libxml2-dev \
            libxslt-dev \
            libyaml-dev \
            wget \
            zlib1g-dev \
            libsqlite3-dev

###########################################
# Install rbenv and ruby
echo "Cloning rbenv and ruby-build into jenkins home directory."
git clone --depth 1 https://github.com/sstephenson/rbenv.git ~/.rbenv
git clone --depth 1 https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

echo "Setting up profile to use rbenv."
echo 'export PATH="${HOME}/.rbenv/bin:${PATH}"' >> ~/.profile
echo 'export RBENV_ROOT="${HOME}/.rbenv"' >> ~/.profile
echo 'eval "$(rbenv init -)"' >> ~/.profile
source ~/.profile

# Install the OLDS - Temporary Hack. Randy and I are co-conspirators
rbenv install -f 2.3.4
rbenv global 2.3.4
gem install bundler

if [ -f ${HOME}/.ruby-version ]; then
  RUBY_VERSION=`cat ${HOME}/.ruby-version`
elif [ -f .ruby-version ]; then
  RUBY_VERSION=`cat .ruby-version`
else
  RUBY_VERSION=2.3.5 # Current as of Sep 26th, 2017
fi

# (StanR) - removing this temporarily
#RUBY_CONFIGURE_OPTS=--enable-shared rbenv install -f ${RUBY_VERSION}
rbenv install -f ${RUBY_VERSION}
rbenv global ${RUBY_VERSION}
gem install bundler

bundle install --without development common --deployment
rbenv rehash

###########################################
# Install node

curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get install -y nodejs build-essential
sudo ln -s $(which nodejs) /usr/local/bin/node

echo "Installing npm packages"
npm install --ignore-scripts --depth 0

###########################################
# Remove secrets and workdir before committing image
rm ${HOME}/.npmrc
rm ${HOME}/.bundle/config
rm -rf ${HOME}/workspace
