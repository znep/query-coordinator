/*!
 * Socrata Styleguide v0.4.0
 * Copyright 2015-2016 Socrata, Inc.
 * Licensed under MIT
 */
function DropDown(t){this.dd=t,this.orientation=t.getAttribute("data-orientation")||"bottom",this.dd.classList.add("dropdown-orientation-"+this.orientation),this.placeholder=this.dd.querySelector("span"),this.opts=Array.prototype.slice.call(this.dd.querySelectorAll(".dropdown-options > li")),this.val="",this.index=-1,this.initEvents()}function FlannelFactory(t){var e=10,o=Array.prototype.slice.apply(document.querySelectorAll("[data-flannel]"));o.forEach(function(t){var o=document.querySelector("#"+t.getAttribute("data-flannel")),i=Array.prototype.slice.apply(o.querySelectorAll("[data-flannel-dismiss]"));i.forEach(function(e){e.addEventListener("click",function(){o.classList.add("flannel-hidden"),t.classList.remove("active")})}),t.addEventListener("click",function(){o.classList.toggle("flannel-hidden");var i=t,n=0,r=0;do n+=i.offsetLeft,r+=i.offsetTop;while(null!==(i=i.offsetParent));n+=t.offsetWidth/2,r=r+t.offsetHeight+e,o.style.left=n+"px",o.style.top=r+"px"})})}function FlyoutFactory(t){var e=10,o=Array.prototype.slice.apply(document.querySelectorAll("[data-flyout]"));o.forEach(function(t){var o=document.querySelector("#"+t.getAttribute("data-flyout"));t.addEventListener("mouseover",function(){o.classList.remove("flyout-hidden");var i=t,n=0,r=0;do n+=i.offsetLeft,r+=i.offsetTop;while(null!==(i=i.offsetParent));n+=t.offsetWidth/2,r=r+t.offsetHeight+e,o.style.left=n+"px",o.style.top=r+"px"}),t.addEventListener("mouseout",function(){o.classList.add("flyout-hidden")})})}function MenuFactory(t){var e=Array.prototype.slice.call(t.querySelectorAll(".menu")),o=Array.prototype.slice.call(t.querySelectorAll("[data-menu-toggle]"));o.forEach(function(e){e.addEventListener("click",function(){var o=t.querySelector("#"+e.getAttribute("data-menu-toggle"));o.classList.toggle("active")})}),e.forEach(function(t){var e=Array.prototype.slice.call(t.querySelectorAll("[data-menu-dismiss]"));e.forEach(function(e){e.addEventListener("click",function(){t.classList.remove("active"),document.querySelector('[data-menu-toggle="'+t.id+'"]').classList.remove("active")})})})}function ModalFactory(t){this.root=t,this.dismissals=Array.prototype.slice.apply(t.querySelectorAll("[data-modal-dismiss]")),this.openers=Array.prototype.slice.apply(t.querySelectorAll("[data-modal]")),this.attachEvents()}function ToggleFactory(t){var e=Array.prototype.slice.apply(t.querySelectorAll("[data-toggle]"));this.element=t,e.forEach(function(t){t.addEventListener("click",this.toggle.bind(this))},this)}function TourFactory(t){this.root=t,this.openers=Array.prototype.slice.apply(t.querySelectorAll("[data-tour]")),this.tourOverlay=t.querySelector(".tour-overlay"),this.initializeTour(),this.addSteps(),this.attachEvents(),0===this.openers.length&&this.openTour()}DropDown.prototype={initEvents:function(){var t=this;t.dd.addEventListener("click",function(e){return e.stopPropagation(),t.dd.classList.toggle("active"),!1}),t.opts.forEach(function(e){e.addEventListener("click",function(o){o.preventDefault();for(var i=e,n=0;null!==(i=i.previousElementSibling);)n++;return t.val=e.textContent,t.index=n,t.placeholder.textContent="Gender: "+t.val,!1})})}},ModalFactory.prototype={attachEvents:function(){this.dismissals.forEach(function(t){t.addEventListener("click",this.dismiss.bind(this))},this),this.openers.forEach(function(t){t.addEventListener("click",this.open.bind(this))},this),document.addEventListener("keyup",function(t){var e=t.which||t.keyCode;if(27===e){var o=Array.prototype.slice.call(document.querySelectorAll(".modal:not(.modal-hidden)"));o.forEach(function(t){t.classList.add("modal-hidden")})}})},open:function(t){var e=t.target.getAttribute("data-modal");e=this.root.querySelector("#"+e),e.classList.remove("modal-hidden")},dismiss:function(t){var e=t.target,o=e===t.currentTarget&&e.classList.contains("modal-overlay");do if(e.hasAttribute("data-modal-dismiss")&&!e.classList.contains("modal"))o=!0;else{if(e.classList.contains("modal")&&o)return e.classList.add("modal-hidden");if(e.classList.contains("modal"))return}while((e=e.parentNode)!==this.root)}},ToggleFactory.prototype={toggle:function(t){var e=t.target;do if(e.hasAttribute("data-toggle"))return e.classList.toggle("active");while((e=e.parentNode)!==this.element)}},TourFactory.prototype={initializeTour:function(){var t=this;this.tour=new Shepherd.Tour({defaults:{showCancelLink:!0,buttons:[{text:t.tourOverlay.getAttribute("data-tour-skip"),classes:"btn-default",action:function(){t.tour.cancel()}},{text:t.tourOverlay.getAttribute("data-tour-next"),classes:"btn-primary",action:function(){t.clickNext()}}]}})},addSteps:function(){var t=this,e=Array.prototype.slice.apply(document.querySelectorAll("[data-tour-step]")),o=e.sort(function(t,e){var o=parseInt(t.getAttribute("data-step-number")),i=parseInt(e.getAttribute("data-step-number"));return o>i?1:i>o?-1:0});o.forEach(function(e,i){var n={title:e.getAttribute("data-title"),text:e.innerHTML},r=e.getAttribute("data-classes"),s=e.getAttribute("data-attach-to-element"),a=e.getAttribute("data-attach-to-position"),l={left:"0 25px",right:"0 -25px",top:"25px 0",bottom:"-25px 0"}[a];r&&(n.classes=r.split(" ")),s&&a&&l&&(n.attachTo={element:s,on:a},n.tetherOptions={offset:l}),o.length-1===i&&(n.buttons=[{text:t.tourOverlay.getAttribute("data-tour-done"),classes:"btn-primary",action:t.tour.complete}]),t.tour.addStep(n)})},attachEvents:function(){var t=this;t.openers.forEach(function(e){e.addEventListener("click",t.openTour.bind(t))},t),document.addEventListener("keyup",function(e){var o=e.which||e.keyCode;27===o&&t.tour.cancel()}),t.tourOverlay.addEventListener("click",function(){t.tour.cancel()}),t.tour.on("active",function(){t.tourOverlay.classList.remove("overlay-hidden")}),t.tour.on("inactive",function(){t.tourOverlay.classList.add("overlay-hidden")})},openTour:function(){this.tour.start(),this.tourOverlay.classList.remove("tour-overlay-hidden")},clickNext:function(){document.dispatchEvent(new CustomEvent("next",{detail:this.tour.getCurrentStep()})),this.tour.next()}},!function(t,e){"function"==typeof define&&define.amd?define(["tether"],e):"object"==typeof exports?module.exports=e(require("tether")):t.Shepherd=e(t.Tether)}(this,function(t){"use strict";function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function i(t){var e=document.createElement("div");return e.innerHTML=t,e.children[0]}function n(t,e){var o=void 0;return"undefined"!=typeof t.matches?o=t.matches:"undefined"!=typeof t.matchesSelector?o=t.matchesSelector:"undefined"!=typeof t.msMatchesSelector?o=t.msMatchesSelector:"undefined"!=typeof t.webkitMatchesSelector?o=t.webkitMatchesSelector:"undefined"!=typeof t.mozMatchesSelector?o=t.mozMatchesSelector:"undefined"!=typeof t.oMatchesSelector&&(o=t.oMatchesSelector),o.call(t,e)}function r(t,e){if(null===t||"undefined"==typeof t)return t;if("object"==typeof t)return t;var o=t.split(" "),i=o.length,n=e.length;i>n&&(o[0]=o.slice(0,i-n+1).join(" "),o.splice(1,n));for(var r={},s=0;n>s;++s){var a=e[s];r[a]=o[s]}return r}var s=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}(),a=function(t,e,o){for(var i=!0;i;){var n=t,r=e,s=o;a=h=l=void 0,i=!1,null===n&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,r);if(void 0!==a){if("value"in a)return a.value;var l=a.get;return void 0===l?void 0:l.call(s)}var h=Object.getPrototypeOf(n);if(null===h)return;t=h,e=r,o=s,i=!0}},l=t.Utils,h=l.Evented,f=l.addClass,d=l.extend,u=l.hasClass,c=l.removeClass,p=l.uniqueId,g=new h,v={top:"bottom center",left:"middle right",right:"middle left",bottom:"top center",center:"middle center"},m=function(l){function h(t,o){return e(this,h),a(Object.getPrototypeOf(h.prototype),"constructor",this).call(this,t,o),this.tour=t,this.bindMethods(),this.setOptions(o),this}return o(h,l),s(h,[{key:"bindMethods",value:function(){var t=this,e=["_show","show","hide","isOpen","cancel","complete","scrollTo","destroy"];e.map(function(e){t[e]=t[e].bind(t)})}},{key:"setOptions",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options=t,this.destroy(),this.id=this.options.id||this.id||"step-"+p();var e=this.options.when;if(e)for(var o in e)if({}.hasOwnProperty.call(e,o)){var i=e[o];this.on(o,i,this)}this.options.buttons||(this.options.buttons=[{text:"Next",action:this.tour.next}])}},{key:"getTour",value:function(){return this.tour}},{key:"bindAdvance",value:function(){var t=this,e=r(this.options.advanceOn,["selector","event"]),o=e.event,i=e.selector,s=function(e){t.isOpen()&&("undefined"!=typeof i?n(e.target,i)&&t.tour.next():t.el&&e.target===t.el&&t.tour.next())};document.body.addEventListener(o,s),this.on("destroy",function(){return document.body.removeEventListener(o,s)})}},{key:"getAttachTo",value:function(){var t=r(this.options.attachTo,["element","on"])||{},e=t.element;if("string"==typeof e&&(t.element=document.querySelector(e),!t.element))throw new Error("The element for this Shepherd step was not found "+e);return t}},{key:"setupTether",value:function(){if("undefined"==typeof t)throw new Error("Using the attachment feature of Shepherd requires the Tether library");var e=this.getAttachTo(),o=v[e.on||"right"];"undefined"==typeof e.element&&(e.element="viewport",o="middle center");var i={classPrefix:"shepherd",element:this.el,constraints:[{to:"window",pin:!0,attachment:"together"}],target:e.element,offset:e.offset||"0 0",attachment:o};this.tether&&this.tether.destroy(),this.tether=new t(d(i,this.options.tetherOptions))}},{key:"show",value:function(){var t=this;if("undefined"!=typeof this.options.beforeShowPromise){var e=this.options.beforeShowPromise();if("undefined"!=typeof e)return e.then(function(){return t._show()})}this._show()}},{key:"_show",value:function(){var t=this;this.trigger("before-show"),this.el||this.render(),f(this.el,"shepherd-open"),document.body.setAttribute("data-shepherd-step",this.id),this.setupTether(),this.options.scrollTo&&setTimeout(function(){t.scrollTo()}),this.trigger("show")}},{key:"hide",value:function(){this.trigger("before-hide"),c(this.el,"shepherd-open"),document.body.removeAttribute("data-shepherd-step"),this.tether&&this.tether.destroy(),this.tether=null,this.trigger("hide")}},{key:"isOpen",value:function(){return u(this.el,"shepherd-open")}},{key:"cancel",value:function(){this.tour.cancel(),this.trigger("cancel")}},{key:"complete",value:function(){this.tour.complete(),this.trigger("complete")}},{key:"scrollTo",value:function(){var t=this.getAttachTo(),e=t.element;"undefined"!=typeof this.options.scrollToHandler?this.options.scrollToHandler(e):"undefined"!=typeof e&&e.scrollIntoView()}},{key:"destroy",value:function(){"undefined"!=typeof this.el&&(document.body.removeChild(this.el),delete this.el),this.tether&&this.tether.destroy(),this.tether=null,this.trigger("destroy")}},{key:"render",value:function(){var t=this;"undefined"!=typeof this.el&&this.destroy(),this.el=i("<div class='shepherd-step "+(this.options.classes||"")+"' data-id='"+this.id+"' "+(this.options.idAttribute?'id="'+this.options.idAttribute+'"':"")+"></div>");var e=document.createElement("div");e.className="shepherd-content",this.el.appendChild(e);var o=document.createElement("header");if(e.appendChild(o),"undefined"!=typeof this.options.title&&(o.innerHTML+="<h3 class='shepherd-title'>"+this.options.title+"</h3>",this.el.className+=" shepherd-has-title"),this.options.showCancelLink){var n=i("<a href class='shepherd-cancel-link'>✕</a>");o.appendChild(n),this.el.className+=" shepherd-has-cancel-link",this.bindCancelLink(n)}"undefined"!=typeof this.options.text&&!function(){var o=i("<div class='shepherd-text'></div>"),n=t.options.text;"function"==typeof n&&(n=n.call(t,o)),n instanceof HTMLElement?o.appendChild(n):("string"==typeof n&&(n=[n]),n.map(function(t){o.innerHTML+="<p>"+t+"</p>"})),e.appendChild(o)}();var r=document.createElement("footer");this.options.buttons&&!function(){var e=i("<ul class='shepherd-buttons'></ul>");t.options.buttons.map(function(o){var n=i("<li><a class='shepherd-button "+(o.classes||"")+"'>"+o.text+"</a>");e.appendChild(n),t.bindButtonEvents(o,n.querySelector("a"))}),r.appendChild(e)}(),e.appendChild(r),document.body.appendChild(this.el),this.setupTether(),this.options.advanceOn&&this.bindAdvance()}},{key:"bindCancelLink",value:function(t){var e=this;t.addEventListener("click",function(t){t.preventDefault(),e.cancel()})}},{key:"bindButtonEvents",value:function(t,e){var o=this;t.events=t.events||{},"undefined"!=typeof t.action&&(t.events.click=t.action);for(var i in t.events)if({}.hasOwnProperty.call(t.events,i)){var n=t.events[i];"string"==typeof n&&!function(){var t=n;n=function(){return o.tour.show(t)}}(),e.addEventListener(i,n)}this.on("destroy",function(){for(var o in t.events)if({}.hasOwnProperty.call(t.events,o)){var i=t.events[o];e.removeEventListener(o,i)}})}}]),h}(h),y=function(t){function i(){var t=this,o=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];e(this,i),a(Object.getPrototypeOf(i.prototype),"constructor",this).call(this,o),this.bindMethods(),this.options=o,this.steps=this.options.steps||[];var n=["complete","cancel","hide","start","show","active","inactive"];return n.map(function(e){!function(e){t.on(e,function(o){o=o||{},o.tour=t,g.trigger(e,o)})}(e)}),this}return o(i,t),s(i,[{key:"bindMethods",value:function(){var t=this,e=["next","back","cancel","complete","hide"];e.map(function(e){t[e]=t[e].bind(t)})}},{key:"addStep",value:function(t,e){return"undefined"==typeof e&&(e=t),e instanceof m?e.tour=this:(("string"==typeof t||"number"==typeof t)&&(e.id=t.toString()),e=d({},this.options.defaults,e),e=new m(this,e)),this.steps.push(e),this}},{key:"getById",value:function(t){for(var e=0;e<this.steps.length;++e){var o=this.steps[e];if(o.id===t)return o}}},{key:"getCurrentStep",value:function(){return this.currentStep}},{key:"next",value:function(){var t=this.steps.indexOf(this.currentStep);t===this.steps.length-1?(this.hide(t),this.trigger("complete"),this.done()):this.show(t+1,!0)}},{key:"back",value:function(){var t=this.steps.indexOf(this.currentStep);this.show(t-1,!1)}},{key:"cancel",value:function(){"undefined"!=typeof this.currentStep&&this.currentStep.hide(),this.trigger("cancel"),this.done()}},{key:"complete",value:function(){"undefined"!=typeof this.currentStep&&this.currentStep.hide(),this.trigger("complete"),this.done()}},{key:"hide",value:function(){"undefined"!=typeof this.currentStep&&this.currentStep.hide(),this.trigger("hide"),this.done()}},{key:"done",value:function(){g.activeTour=null,c(document.body,"shepherd-active"),this.trigger("inactive",{tour:this})}},{key:"show",value:function(){var t=arguments.length<=0||void 0===arguments[0]?0:arguments[0],e=arguments.length<=1||void 0===arguments[1]?!0:arguments[1];this.currentStep?this.currentStep.hide():(f(document.body,"shepherd-active"),this.trigger("active",{tour:this})),g.activeTour=this;var o=void 0;if(o="string"==typeof t?this.getById(t):this.steps[t])if("undefined"==typeof o.options.showOn||o.options.showOn())this.trigger("show",{step:o,previous:this.currentStep}),this.currentStep=o,o.show();else{var i=this.steps.indexOf(o),n=e?i+1:i-1;this.show(n,e)}}},{key:"start",value:function(){this.trigger("start"),this.currentStep=null,this.next()}}]),i}(h);return d(g,{Tour:y,Step:m,Evented:h}),g}),!function(t,e){"function"==typeof define&&define.amd?define(e):"object"==typeof exports?module.exports=e(require,exports,module):t.Tether=e()}(this,function(t,e,o){"use strict";function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t){var e=getComputedStyle(t)||{},o=e.position;if("fixed"===o)return t;for(var i=t;i=i.parentNode;){var n=void 0;try{n=getComputedStyle(i)}catch(r){}if("undefined"==typeof n||null===n)return i;var s=n,a=s.overflow,l=s.overflowX,h=s.overflowY;if(/(auto|scroll)/.test(a+h+l)&&("absolute"!==o||["relative","absolute","fixed"].indexOf(n.position)>=0))return i}return document.body}function r(t){var e=void 0;t===document?(e=document,t=document.documentElement):e=t.ownerDocument;var o=e.documentElement,i={},n=t.getBoundingClientRect();for(var r in n)i[r]=n[r];var s=S(e);return i.top-=s.top,i.left-=s.left,"undefined"==typeof i.width&&(i.width=document.body.scrollWidth-i.left-i.right),"undefined"==typeof i.height&&(i.height=document.body.scrollHeight-i.top-i.bottom),i.top=i.top-o.clientTop,i.left=i.left-o.clientLeft,i.right=e.body.clientWidth-i.width-i.left,i.bottom=e.body.clientHeight-i.height-i.top,i}function s(t){return t.offsetParent||document.documentElement}function a(){var t=document.createElement("div");t.style.width="100%",t.style.height="200px";var e=document.createElement("div");l(e.style,{position:"absolute",top:0,left:0,pointerEvents:"none",visibility:"hidden",width:"200px",height:"150px",overflow:"hidden"}),e.appendChild(t),document.body.appendChild(e);var o=t.offsetWidth;e.style.overflow="scroll";var i=t.offsetWidth;o===i&&(i=e.clientWidth),document.body.removeChild(e);var n=o-i;return{width:n,height:n}}function l(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e=[];return Array.prototype.push.apply(e,arguments),e.slice(1).forEach(function(e){if(e)for(var o in e)({}).hasOwnProperty.call(e,o)&&(t[o]=e[o])}),t}function h(t,e){if("undefined"!=typeof t.classList)e.split(" ").forEach(function(e){e.trim()&&t.classList.remove(e)});else{var o=new RegExp("(^| )"+e.split(" ").join("|")+"( |$)","gi"),i=u(t).replace(o," ");c(t,i)}}function f(t,e){if("undefined"!=typeof t.classList)e.split(" ").forEach(function(e){e.trim()&&t.classList.add(e)});else{h(t,e);var o=u(t)+(" "+e);c(t,o)}}function d(t,e){if("undefined"!=typeof t.classList)return t.classList.contains(e);var o=u(t);return new RegExp("(^| )"+e+"( |$)","gi").test(o)}function u(t){return t.className instanceof SVGAnimatedString?t.className.baseVal:t.className}function c(t,e){t.setAttribute("class",e)}function p(t,e,o){o.forEach(function(o){-1===e.indexOf(o)&&d(t,o)&&h(t,o)}),e.forEach(function(e){d(t,e)||f(t,e)})}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function g(t,e){var o=arguments.length<=2||void 0===arguments[2]?1:arguments[2];return t+o>=e&&e>=t-o}function v(){return"undefined"!=typeof performance&&"undefined"!=typeof performance.now?performance.now():+new Date}function m(){for(var t={top:0,left:0},e=arguments.length,o=Array(e),i=0;e>i;i++)o[i]=arguments[i];return o.forEach(function(e){var o=e.top,i=e.left;"string"==typeof o&&(o=parseFloat(o,10)),"string"==typeof i&&(i=parseFloat(i,10)),t.top+=o,t.left+=i}),t}function y(t,e){return"string"==typeof t.left&&-1!==t.left.indexOf("%")&&(t.left=parseFloat(t.left,10)/100*e.width),"string"==typeof t.top&&-1!==t.top.indexOf("%")&&(t.top=parseFloat(t.top,10)/100*e.height),t}function b(t,e){return"scrollParent"===e?e=t.scrollParent:"window"===e&&(e=[pageXOffset,pageYOffset,innerWidth+pageXOffset,innerHeight+pageYOffset]),e===document&&(e=e.documentElement),"undefined"!=typeof e.nodeType&&!function(){var t=r(e),o=t,i=getComputedStyle(e);e=[o.left,o.top,t.width+o.left,t.height+o.top],D.forEach(function(t,o){t=t[0].toUpperCase()+t.substr(1),"Top"===t||"Left"===t?e[o]+=parseFloat(i["border"+t+"Width"]):e[o]-=parseFloat(i["border"+t+"Width"])})}(),e}var w=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}(),E=void 0;"undefined"==typeof E&&(E={modules:[]});var C=function(){var t=0;return function(){return++t}}(),O={},S=function(t){var e=t._tetherZeroElement;"undefined"==typeof e&&(e=t.createElement("div"),e.setAttribute("data-tether-id",C()),l(e.style,{top:0,left:0,position:"absolute"}),t.body.appendChild(e),t._tetherZeroElement=e);var o=e.getAttribute("data-tether-id");if("undefined"==typeof O[o]){O[o]={};var i=e.getBoundingClientRect();for(var n in i)O[o][n]=i[n];A(function(){delete O[o]})}return O[o]},x=[],A=function(t){x.push(t)},k=function(){for(var t=void 0;t=x.pop();)t()},T=function(){function t(){i(this,t)}return w(t,[{key:"on",value:function(t,e,o){var i=arguments.length<=3||void 0===arguments[3]?!1:arguments[3];"undefined"==typeof this.bindings&&(this.bindings={}),"undefined"==typeof this.bindings[t]&&(this.bindings[t]=[]),this.bindings[t].push({handler:e,ctx:o,once:i})}},{key:"once",value:function(t,e,o){this.on(t,e,o,!0)}},{key:"off",value:function(t,e){if("undefined"==typeof this.bindings||"undefined"==typeof this.bindings[t])if("undefined"==typeof e)delete this.bindings[t];else for(var o=0;o<this.bindings[t].length;)this.bindings[t][o].handler===e?this.bindings[t].splice(o,1):++o}},{key:"trigger",value:function(t){if("undefined"!=typeof this.bindings&&this.bindings[t]){for(var e=0,o=arguments.length,i=Array(o>1?o-1:0),n=1;o>n;n++)i[n-1]=arguments[n];for(;e<this.bindings[t].length;){var r=this.bindings[t][e],s=r.handler,a=r.ctx,l=r.once,h=a;"undefined"==typeof h&&(h=this),s.apply(h,i),l?this.bindings[t].splice(e,1):++e}}}}]),t}();E.Utils={getScrollParent:n,getBounds:r,getOffsetParent:s,extend:l,addClass:f,removeClass:h,hasClass:d,updateClasses:p,defer:A,flush:k,uniqueId:C,Evented:T,getScrollBarSize:a};var L=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(l){n=!0,r=l}finally{try{!i&&a["return"]&&a["return"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),w=function(){function t(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,o,i){return o&&t(e.prototype,o),i&&t(e,i),e}}();if("undefined"==typeof E)throw new Error("You must include the utils.js file before tether.js");var M=E.Utils,n=M.getScrollParent,r=M.getBounds,s=M.getOffsetParent,l=M.extend,f=M.addClass,h=M.removeClass,p=M.updateClasses,A=M.defer,k=M.flush,a=M.getScrollBarSize,P=function(){if("undefined"==typeof document)return"";for(var t=document.createElement("div"),e=["transform","webkitTransform","OTransform","MozTransform","msTransform"],o=0;o<e.length;++o){var i=e[o];if(void 0!==t.style[i])return i}}(),q=[],F=function(){q.forEach(function(t){t.position(!1)}),k()};!function(){var t=null,e=null,o=null,i=function n(){return"undefined"!=typeof e&&e>16?(e=Math.min(e-16,250),void(o=setTimeout(n,250))):void("undefined"!=typeof t&&v()-t<10||("undefined"!=typeof o&&(clearTimeout(o),o=null),t=v(),F(),e=v()-t))};"undefined"!=typeof window&&["resize","scroll","touchmove"].forEach(function(t){window.addEventListener(t,i)})}();var _={center:"center",left:"right",right:"left"},W={middle:"middle",top:"bottom",bottom:"top"},B={top:0,left:0,middle:"50%",center:"50%",bottom:"100%",right:"100%"},H=function(t,e){var o=t.left,i=t.top;return"auto"===o&&(o=_[e.left]),"auto"===i&&(i=W[e.top]),{left:o,top:i}},j=function(t){var e=t.left,o=t.top;return"undefined"!=typeof B[t.left]&&(e=B[t.left]),"undefined"!=typeof B[t.top]&&(o=B[t.top]),{left:e,top:o}},z=function(t){var e=t.split(" "),o=L(e,2),i=o[0],n=o[1];return{top:i,left:n}},N=z,Y=function(){function t(e){var o=this;i(this,t),this.position=this.position.bind(this),q.push(this),this.history=[],this.setOptions(e,!1),E.modules.forEach(function(t){"undefined"!=typeof t.initialize&&t.initialize.call(o)}),this.position()}return w(t,[{key:"getClass",value:function(){var t=arguments.length<=0||void 0===arguments[0]?"":arguments[0],e=this.options.classes;return"undefined"!=typeof e&&e[t]?this.options.classes[t]:this.options.classPrefix?this.options.classPrefix+"-"+t:t}},{key:"setOptions",value:function(t){var e=this,o=arguments.length<=1||void 0===arguments[1]?!0:arguments[1],i={offset:"0 0",targetOffset:"0 0",targetAttachment:"auto auto",classPrefix:"tether"};this.options=l(i,t);var r=this.options,s=r.element,a=r.target,h=r.targetModifier;if(this.element=s,this.target=a,this.targetModifier=h,"viewport"===this.target?(this.target=document.body,this.targetModifier="visible"):"scroll-handle"===this.target&&(this.target=document.body,this.targetModifier="scroll-handle"),["element","target"].forEach(function(t){if("undefined"==typeof e[t])throw new Error("Tether Error: Both element and target must be defined");"undefined"!=typeof e[t].jquery?e[t]=e[t][0]:"string"==typeof e[t]&&(e[t]=document.querySelector(e[t]))}),f(this.element,this.getClass("element")),this.options.addTargetClasses!==!1&&f(this.target,this.getClass("target")),!this.options.attachment)throw new Error("Tether Error: You must provide an attachment");this.targetAttachment=N(this.options.targetAttachment),this.attachment=N(this.options.attachment),this.offset=z(this.options.offset),this.targetOffset=z(this.options.targetOffset),"undefined"!=typeof this.scrollParent&&this.disable(),"scroll-handle"===this.targetModifier?this.scrollParent=this.target:this.scrollParent=n(this.target),this.options.enabled!==!1&&this.enable(o)}},{key:"getTargetBounds",value:function(){if("undefined"==typeof this.targetModifier)return r(this.target);if("visible"===this.targetModifier){if(this.target===document.body)return{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth};var t=r(this.target),e={height:t.height,width:t.width,top:t.top,left:t.left};return e.height=Math.min(e.height,t.height-(pageYOffset-t.top)),e.height=Math.min(e.height,t.height-(t.top+t.height-(pageYOffset+innerHeight))),e.height=Math.min(innerHeight,e.height),e.height-=2,e.width=Math.min(e.width,t.width-(pageXOffset-t.left)),e.width=Math.min(e.width,t.width-(t.left+t.width-(pageXOffset+innerWidth))),e.width=Math.min(innerWidth,e.width),e.width-=2,e.top<pageYOffset&&(e.top=pageYOffset),e.left<pageXOffset&&(e.left=pageXOffset),e}if("scroll-handle"===this.targetModifier){var t=void 0,o=this.target;o===document.body?(o=document.documentElement,t={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):t=r(o);var i=getComputedStyle(o),n=o.scrollWidth>o.clientWidth||[i.overflow,i.overflowX].indexOf("scroll")>=0||this.target!==document.body,s=0;n&&(s=15);var a=t.height-parseFloat(i.borderTopWidth)-parseFloat(i.borderBottomWidth)-s,e={width:15,height:.975*a*(a/o.scrollHeight),left:t.left+t.width-parseFloat(i.borderLeftWidth)-15},l=0;408>a&&this.target===document.body&&(l=-11e-5*Math.pow(a,2)-.00727*a+22.58),this.target!==document.body&&(e.height=Math.max(e.height,24));var h=this.target.scrollTop/(o.scrollHeight-a);return e.top=h*(a-e.height-l)+t.top+parseFloat(i.borderTopWidth),this.target===document.body&&(e.height=Math.max(e.height,24)),e}}},{key:"clearCache",value:function(){this._cache={}}},{key:"cache",value:function(t,e){return"undefined"==typeof this._cache&&(this._cache={}),"undefined"==typeof this._cache[t]&&(this._cache[t]=e.call(this)),this._cache[t]}},{key:"enable",value:function(){var t=arguments.length<=0||void 0===arguments[0]?!0:arguments[0];this.options.addTargetClasses!==!1&&f(this.target,this.getClass("enabled")),f(this.element,this.getClass("enabled")),this.enabled=!0,this.scrollParent!==document&&this.scrollParent.addEventListener("scroll",this.position),t&&this.position()}},{key:"disable",value:function(){h(this.target,this.getClass("enabled")),h(this.element,this.getClass("enabled")),this.enabled=!1,"undefined"!=typeof this.scrollParent&&this.scrollParent.removeEventListener("scroll",this.position)}},{key:"destroy",value:function(){var t=this;this.disable(),q.forEach(function(e,o){return e===t?void q.splice(o,1):void 0})}},{key:"updateAttachClasses",value:function(t,e){var o=this;t=t||this.attachment,e=e||this.targetAttachment;var i=["left","top","bottom","right","middle","center"];"undefined"!=typeof this._addAttachClasses&&this._addAttachClasses.length&&this._addAttachClasses.splice(0,this._addAttachClasses.length),"undefined"==typeof this._addAttachClasses&&(this._addAttachClasses=[]);var n=this._addAttachClasses;t.top&&n.push(this.getClass("element-attached")+"-"+t.top),t.left&&n.push(this.getClass("element-attached")+"-"+t.left),e.top&&n.push(this.getClass("target-attached")+"-"+e.top),e.left&&n.push(this.getClass("target-attached")+"-"+e.left);var r=[];i.forEach(function(t){r.push(o.getClass("element-attached")+"-"+t),r.push(o.getClass("target-attached")+"-"+t)}),A(function(){"undefined"!=typeof o._addAttachClasses&&(p(o.element,o._addAttachClasses,r),o.options.addTargetClasses!==!1&&p(o.target,o._addAttachClasses,r),delete o._addAttachClasses)})}},{key:"position",value:function(){var t=this,e=arguments.length<=0||void 0===arguments[0]?!0:arguments[0];if(this.enabled){this.clearCache();var o=H(this.targetAttachment,this.attachment);this.updateAttachClasses(this.attachment,o);var i=this.cache("element-bounds",function(){return r(t.element)}),n=i.width,l=i.height;if(0===n&&0===l&&"undefined"!=typeof this.lastSize){var h=this.lastSize;n=h.width,l=h.height}else this.lastSize={width:n,height:l};var f=this.cache("target-bounds",function(){return t.getTargetBounds()}),d=f,u=y(j(this.attachment),{width:n,height:l}),c=y(j(o),d),p=y(this.offset,{width:n,height:l}),g=y(this.targetOffset,d);u=m(u,p),c=m(c,g);for(var v=f.left+c.left-u.left,b=f.top+c.top-u.top,w=0;w<E.modules.length;++w){var C=E.modules[w],O=C.position.call(this,{left:v,top:b,targetAttachment:o,targetPos:f,elementPos:i,offset:u,targetOffset:c,manualOffset:p,manualTargetOffset:g,scrollbarSize:x,attachment:this.attachment});if(O===!1)return!1;"undefined"!=typeof O&&"object"==typeof O&&(b=O.top,v=O.left)}var S={page:{top:b,left:v},viewport:{top:b-pageYOffset,bottom:pageYOffset-b-l+innerHeight,left:v-pageXOffset,right:pageXOffset-v-n+innerWidth}},x=void 0;return document.body.scrollWidth>window.innerWidth&&(x=this.cache("scrollbar-size",a),S.viewport.bottom-=x.height),document.body.scrollHeight>window.innerHeight&&(x=this.cache("scrollbar-size",a),S.viewport.right-=x.width),(-1===["","static"].indexOf(document.body.style.position)||-1===["","static"].indexOf(document.body.parentElement.style.position))&&(S.page.bottom=document.body.scrollHeight-b-l,S.page.right=document.body.scrollWidth-v-n),"undefined"!=typeof this.options.optimizations&&this.options.optimizations.moveElement!==!1&&"undefined"==typeof this.targetModifier&&!function(){var e=t.cache("target-offsetparent",function(){return s(t.target)}),o=t.cache("target-offsetparent-bounds",function(){return r(e)}),i=getComputedStyle(e),n=o,a={};if(["Top","Left","Bottom","Right"].forEach(function(t){a[t.toLowerCase()]=parseFloat(i["border"+t+"Width"])}),o.right=document.body.scrollWidth-o.left-n.width+a.right,o.bottom=document.body.scrollHeight-o.top-n.height+a.bottom,S.page.top>=o.top+a.top&&S.page.bottom>=o.bottom&&S.page.left>=o.left+a.left&&S.page.right>=o.right){var l=e.scrollTop,h=e.scrollLeft;S.offset={top:S.page.top-o.top+l-a.top,left:S.page.left-o.left+h-a.left}}}(),this.move(S),this.history.unshift(S),this.history.length>3&&this.history.pop(),e&&k(),!0}}},{key:"move",value:function(t){var e=this;if("undefined"!=typeof this.element.parentNode){var o={};for(var i in t){o[i]={};for(var n in t[i]){for(var r=!1,a=0;a<this.history.length;++a){var h=this.history[a];if("undefined"!=typeof h[i]&&!g(h[i][n],t[i][n])){r=!0;break}}r||(o[i][n]=!0)}}var f={top:"",left:"",right:"",bottom:""},d=function(t,o){var i="undefined"!=typeof e.options.optimizations,n=i?e.options.optimizations.gpu:null;
if(n!==!1){var r=void 0,s=void 0;t.top?(f.top=0,r=o.top):(f.bottom=0,r=-o.bottom),t.left?(f.left=0,s=o.left):(f.right=0,s=-o.right),f[P]="translateX("+Math.round(s)+"px) translateY("+Math.round(r)+"px)","msTransform"!==P&&(f[P]+=" translateZ(0)")}else t.top?f.top=o.top+"px":f.bottom=o.bottom+"px",t.left?f.left=o.left+"px":f.right=o.right+"px"},u=!1;if((o.page.top||o.page.bottom)&&(o.page.left||o.page.right)?(f.position="absolute",d(o.page,t.page)):(o.viewport.top||o.viewport.bottom)&&(o.viewport.left||o.viewport.right)?(f.position="fixed",d(o.viewport,t.viewport)):"undefined"!=typeof o.offset&&o.offset.top&&o.offset.left?!function(){f.position="absolute";var i=e.cache("target-offsetparent",function(){return s(e.target)});s(e.element)!==i&&A(function(){e.element.parentNode.removeChild(e.element),i.appendChild(e.element)}),d(o.offset,t.offset),u=!0}():(f.position="absolute",d({top:!0,left:!0},t.page)),!u){for(var c=!0,p=this.element.parentNode;p&&"BODY"!==p.tagName;){if("static"!==getComputedStyle(p).position){c=!1;break}p=p.parentNode}c||(this.element.parentNode.removeChild(this.element),document.body.appendChild(this.element))}var v={},m=!1;for(var n in f){var y=f[n],b=this.element.style[n];""!==b&&""!==y&&["top","left","bottom","right"].indexOf(n)>=0&&(b=parseFloat(b),y=parseFloat(y)),b!==y&&(m=!0,v[n]=y)}m&&A(function(){l(e.element.style,v)})}}}]),t}();Y.modules=[],E.position=F;var X=l(Y,E),L=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(l){n=!0,r=l}finally{try{!i&&a["return"]&&a["return"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),M=E.Utils,r=M.getBounds,l=M.extend,p=M.updateClasses,A=M.defer,D=["left","top","right","bottom"];E.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=t.targetAttachment;if(!this.options.constraints)return!0;var s=this.cache("element-bounds",function(){return r(e.element)}),a=s.height,h=s.width;if(0===h&&0===a&&"undefined"!=typeof this.lastSize){var f=this.lastSize;h=f.width,a=f.height}var d=this.cache("target-bounds",function(){return e.getTargetBounds()}),u=d.height,c=d.width,g=[this.getClass("pinned"),this.getClass("out-of-bounds")];this.options.constraints.forEach(function(t){var e=t.outOfBoundsClass,o=t.pinnedClass;e&&g.push(e),o&&g.push(o)}),g.forEach(function(t){["left","top","right","bottom"].forEach(function(e){g.push(t+"-"+e)})});var v=[],m=l({},n),y=l({},this.attachment);return this.options.constraints.forEach(function(t){var r=t.to,s=t.attachment,l=t.pin;"undefined"==typeof s&&(s="");var f=void 0,d=void 0;if(s.indexOf(" ")>=0){var p=s.split(" "),g=L(p,2);d=g[0],f=g[1]}else f=d=s;var w=b(e,r);("target"===d||"both"===d)&&(o<w[1]&&"top"===m.top&&(o+=u,m.top="bottom"),o+a>w[3]&&"bottom"===m.top&&(o-=u,m.top="top")),"together"===d&&(o<w[1]&&"top"===m.top&&("bottom"===y.top?(o+=u,m.top="bottom",o+=a,y.top="top"):"top"===y.top&&(o+=u,m.top="bottom",o-=a,y.top="bottom")),o+a>w[3]&&"bottom"===m.top&&("top"===y.top?(o-=u,m.top="top",o-=a,y.top="bottom"):"bottom"===y.top&&(o-=u,m.top="top",o+=a,y.top="top")),"middle"===m.top&&(o+a>w[3]&&"top"===y.top?(o-=a,y.top="bottom"):o<w[1]&&"bottom"===y.top&&(o+=a,y.top="top"))),("target"===f||"both"===f)&&(i<w[0]&&"left"===m.left&&(i+=c,m.left="right"),i+h>w[2]&&"right"===m.left&&(i-=c,m.left="left")),"together"===f&&(i<w[0]&&"left"===m.left?"right"===y.left?(i+=c,m.left="right",i+=h,y.left="left"):"left"===y.left&&(i+=c,m.left="right",i-=h,y.left="right"):i+h>w[2]&&"right"===m.left?"left"===y.left?(i-=c,m.left="left",i-=h,y.left="right"):"right"===y.left&&(i-=c,m.left="left",i+=h,y.left="left"):"center"===m.left&&(i+h>w[2]&&"left"===y.left?(i-=h,y.left="right"):i<w[0]&&"right"===y.left&&(i+=h,y.left="left"))),("element"===d||"both"===d)&&(o<w[1]&&"bottom"===y.top&&(o+=a,y.top="top"),o+a>w[3]&&"top"===y.top&&(o-=a,y.top="bottom")),("element"===f||"both"===f)&&(i<w[0]&&("right"===y.left?(i+=h,y.left="left"):"center"===y.left&&(i+=h/2,y.left="left")),i+h>w[2]&&("left"===y.left?(i-=h,y.left="right"):"center"===y.left&&(i-=h/2,y.left="right"))),"string"==typeof l?l=l.split(",").map(function(t){return t.trim()}):l===!0&&(l=["top","left","right","bottom"]),l=l||[];var E=[],C=[];o<w[1]&&(l.indexOf("top")>=0?(o=w[1],E.push("top")):C.push("top")),o+a>w[3]&&(l.indexOf("bottom")>=0?(o=w[3]-a,E.push("bottom")):C.push("bottom")),i<w[0]&&(l.indexOf("left")>=0?(i=w[0],E.push("left")):C.push("left")),i+h>w[2]&&(l.indexOf("right")>=0?(i=w[2]-h,E.push("right")):C.push("right")),E.length&&!function(){var t=void 0;t="undefined"!=typeof e.options.pinnedClass?e.options.pinnedClass:e.getClass("pinned"),v.push(t),E.forEach(function(e){v.push(t+"-"+e)})}(),C.length&&!function(){var t=void 0;t="undefined"!=typeof e.options.outOfBoundsClass?e.options.outOfBoundsClass:e.getClass("out-of-bounds"),v.push(t),C.forEach(function(e){v.push(t+"-"+e)})}(),(E.indexOf("left")>=0||E.indexOf("right")>=0)&&(y.left=m.left=!1),(E.indexOf("top")>=0||E.indexOf("bottom")>=0)&&(y.top=m.top=!1),(m.top!==n.top||m.left!==n.left||y.top!==e.attachment.top||y.left!==e.attachment.left)&&e.updateAttachClasses(y,m)}),A(function(){e.options.addTargetClasses!==!1&&p(e.target,v,g),p(e.element,v,g)}),{top:o,left:i}}});var M=E.Utils,r=M.getBounds,p=M.updateClasses,A=M.defer;E.modules.push({position:function(t){var e=this,o=t.top,i=t.left,n=this.cache("element-bounds",function(){return r(e.element)}),s=n.height,a=n.width,l=this.getTargetBounds(),h=o+s,f=i+a,d=[];o<=l.bottom&&h>=l.top&&["left","right"].forEach(function(t){var e=l[t];(e===i||e===f)&&d.push(t)}),i<=l.right&&f>=l.left&&["top","bottom"].forEach(function(t){var e=l[t];(e===o||e===h)&&d.push(t)});var u=[],c=[],g=["left","top","right","bottom"];return u.push(this.getClass("abutted")),g.forEach(function(t){u.push(e.getClass("abutted")+"-"+t)}),d.length&&c.push(this.getClass("abutted")),d.forEach(function(t){c.push(e.getClass("abutted")+"-"+t)}),A(function(){e.options.addTargetClasses!==!1&&p(e.target,c,u),p(e.element,c,u)}),!0}});var L=function(){function t(t,e){var o=[],i=!0,n=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(o.push(s.value),!e||o.length!==e);i=!0);}catch(l){n=!0,r=l}finally{try{!i&&a["return"]&&a["return"]()}finally{if(n)throw r}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();return E.modules.push({position:function(t){var e=t.top,o=t.left;if(this.options.shift){var i=this.options.shift;"function"==typeof this.options.shift&&(i=this.options.shift.call(this,{top:e,left:o}));var n=void 0,r=void 0;if("string"==typeof i){i=i.split(" "),i[1]=i[1]||i[0];var s=i,a=L(s,2);n=a[0],r=a[1],n=parseFloat(n,10),r=parseFloat(r,10)}else n=i.top,r=i.left;return e+=n,o+=r,{top:e,left:o}}}}),X});
//# sourceMappingURL=data:application/json;base64,
