<% content_for :headline do %>
  <h1><span class="filterIcon">Create a Filtered View</span></h1>
<% end %>

<div class="modalContentWrapper filterDatasetWrapper">
  <div id="filterList" class="clearfix">
    <p>Show rows that match 
      <select id="filterOperator" name="operator">
        <option value="and">all</option>
        <option value="or">any</option>
      </select> of the following conditions:
    </p>
    <table id="filterTable">
      <colgroup>
          <col class="delete" />
          <col class="name" />
          <col class="condition" />
          <col class="editor" />
          <col class="addRemove" />
      </colgroup>
      <thead>
        <tr>
          <th class="delete">x</th>
          <th class="name">Column Name</th>
          <th class="condition">Limit To</th>
          <th class="editor">Cell Contents</th>
          <th class="addRemove"></th>
        </tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    
    <p class="information">
      There are no columns to sort yet. Please add some data, then try again.
    </p>
  </div>
  
  <div class="submitLine clearfix">
    <ul class="submitActions">
      <li>
        <ul class="actionButtons">
          <li><a class="arrowButton jqmClose" href="#submit">Create Filter</a></li>
        </ul>
      </li>
    </ul>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  $(function() {
    var columns = $("#readGrid").blistModel().meta().columns[0];
    var view = $("#readGrid").blistModel().meta().view;

    for (var i = 0; i < columns.length; i++)
    {
        // remove nested table entries from the array
        if (columns[i].type == 'nested_table')
        {
            columns.splice(i, 1);
            i--; // go back an index if we removed something
        }
    }

    if (columns.length === 0)
    {
      $('#filterTable, #filterList > *').hide();
      $('#filterList p.information, #filterList .createBar').show();
      $('#filterList .createBar .actionButtons a').text('Continue');
      return;
    }
    else if (view.viewFilters != undefined)
    {
      $("#filterOperator").val(view.viewFilters.value.toLowerCase());
      blist.filter.populate($("#filterTable tbody"), view.viewFilters, columns);
    }
    else
    {
      blist.filter.addFilterRow($("#filterTable tbody"), columns);
    }

    $(".filterDatasetWrapper .submitActions a").click(function(event) {
      event.preventDefault();
      var operator = $("#filterOperator").val();
      var viewFilters = blist.filter.getFilter($("#filterTable tbody"), operator);

      $("#readGrid").datasetGrid().updateFilter(viewFilters);
    });
    
    $('#filterList td.addRemove a').live('click', blist.filter.filterAdd);
    $('#filterList td.delete a').live('click', blist.filter.filterRemove);
  });
</script>
