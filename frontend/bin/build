#!/bin/bash
set -ex

# Example usage:
# COMPRESS_ASSETS=true SERVICE_ARTIFACT=platform-ui.tgz SERVICE_NAME=frontend SERVICE_VERSION=1.0.0 \
#   SERVICE_SHA=$(git rev-parse HEAD | cut -c1-8) ARTIFACTORY_USER=shared-engr \
#   ARTIFACTORY_PASSWORD='2ZfexutMJBH3&Dz*wi$vgbJzD8B2!h' WORKSPACE=$PWD/.. BUILD_URL=http://jenkins bin/build

function verify_env_var() {
  if [ -z "${!1}" ]; then
    echo "The following ENV variable must be set: #{$1}"
    exit 2
  fi
}

set +x
verify_env_var 'COMPRESS_ASSETS'
verify_env_var 'SERVICE_ARTIFACT'
verify_env_var 'SERVICE_NAME'
verify_env_var 'SERVICE_VERSION'
verify_env_var 'SERVICE_SHA'
verify_env_var 'ARTIFACTORY_USER'
verify_env_var 'ARTIFACTORY_PASSWORD'
verify_env_var 'WORKSPACE'
verify_env_var 'BUILD_URL'
set -x

# Called by Jenkins to build and package frontend in preparation for a deploy
# Note that dependencies should be installed before running this script.

cd $WORKSPACE/frontend

echo "Configuring bundle to connect to repo.socrata.com with credentials..."
set +x
bundle config repo.socrata.com ${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD}
set -x
bundle check || bundle install

# install build dependencies. Hate to have to do this manually, but it's not working
# well in our build process.
gem install localeapp

# Write REVISION file
git rev-parse HEAD > "${WORKSPACE}/frontend/REVISION"

# Package assets
npm run build:prod
bundle exec rake assets:precompile

# We want to push our latest en.yml up to LocaleApp and then pull down
# additional translations in other locales.
bin/push_base_locale -y
set +e
bin/pull_translations
set -e

if [ ! -f ${WORKSPACE}/frontend/config/locales/es.yml ]; then
  echo "Did not successfully download locales"
  echo `ls -l ${WORKSPACE}/frontend/config/locales/`
  exit 1
fi

# Run tests (just running rake _should_ run all the tests, but this often fails)
export CORE_SESSION=${CORE_SESSION:-'frontend-generated'}
bundle exec rake test:units
bundle exec rake test:functionals
bundle exec rspec --no-color
bundle exec rake test:karma:parallel

# Remove certain javascript files from public/javascripts (BUT WHY)
if [ ! ${COMPRESS_ASSETS} = "true" ] ; then
  bundle exec rake deploy:move_resources
fi

# Update translations for site_chrome.
$(cd ../common && rake site_chrome:build)

# Tar the entirety of platform-ui to be used by our docker build process.
$(cd .. && tar cpzfX ${SERVICE_ARTIFACT} frontend/.package-ignore *)

# Get build info for Decima
echo "---" > build_info.yml
echo "service: ${SERVICE_NAME}" >> build_info.yml
echo "version: ${SERVICE_VERSION}" >> build_info.yml
echo "service_sha: ${SERVICE_SHA}" >> build_info.yml
echo "configuration: ${BUILD_URL}" >> build_info.yml

# Static analysis
if ${RUN_STATIC_ANALYSIS}; then
  # FIXME for some reason this works but the commented rake task below does not.
  ./node_modules/.bin/eslint --ignore-path .eslintignore -c package.json -f checkstyle public/javascripts/angular > eslint-results.xml || true
  # bundle exec rake "lint:js:dataCards[checkstyle]" > eslint-results.xml

  bundle exec rake "lint:ruby[xml]" > reek-results.xml
fi
