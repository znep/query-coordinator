<% content_for :head do %>
  <title>Example Usage: Flannel</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF8">
  <%= rendered_stylesheet_tag 'component_example_pages' %>
<% end %>

<style type="text/css">
  .moving-target {
    background: green;
    cursor: crosshair;
  }

  .moving-target * {
    visibility: hidden;
  }

  #safe-target {
    background: orange;
    margin-left: 30em;
  }
</style>

<section class="styleguide-section">
  <p>
    <a class="btn btn-default" href='/internal/demos/components'><span class="socrata-icon-arrow-left"></span> Components</a>
  </p>
  <h2 class="styleguide-header">Flannel</h2>
  <div class="styleguide-example">
    <div id="btn-flannel-container"></div>
  </div>
  <p><b>Note!</b> The props are well-documented in the
    <a href="https://github.com/socrata/platform-ui/blob/master/common/components/Flannel/index.js">Flannel PropTypes</a>.
  </p>
  <div id="safe-target">
    Clicking in here won't close the flannel (unlike other places outside the flannel).
  </div>
  <div class="styleguide-code-example" id="styleguide-code-example-1"></div>
</section>

<% content_for :scripts do %>
  <%= render_demos_javascript_environment %>
  <%= include_webpack_bundle 'component_example_pages/main.js' %>

  <script type="text/javascript" id="example-1">
    $(function() {
      var targetBtn;

      var Flannel = components.Flannel;
      var FlannelHeader = components.FlannelHeader;
      var FlannelContent = components.FlannelContent;
      var FlannelFooter = components.FlannelFooter;
      var SocrataIcon = components.SocrataIcon;

      var title = 'Access this Dataset via SODA API';

      var openHereButtonProps = {
       className: "btn btn-primary",
       ref: function(ref) { targetBtn = ref },
       onClick: renderFlannel,
       'aria-haspopup': true,
       'aria-owns': 'flannel-example'
      };

      var moveTargetButtonProps = {
       className: "btn",
       onClick: moveTarget
      };

      var props = {
        id: 'flannel-example',
        title: title,
        target: function() { return targetBtn },
        isOpen: false,
        onDismiss: maybeCloseFlannel
      };

      var headerProps = {
        title: title,
        onDismiss: maybeCloseFlannel
      };

      function renderButton() {
        ReactDOM.render(
          React.createElement('div', null, [
            React.createElement('button', openHereButtonProps, 'Open flannel here'),
            React.createElement('button', moveTargetButtonProps, 'Move target (or press "m")'),
            React.createElement('div', {id: 'flannel-container'})
          ]),
          document.getElementById('btn-flannel-container')
        );
      }

      function moveTarget() {
        $(document.documentElement).one('click', function(event) {
          $(this).
            toggleClass('moving-target', false);
          $(targetBtn).
            css('position', 'absolute').
            css('left', event.offsetX).
            css('top', event.offsetY);
        }).
        toggleClass('moving-target', true);
      }

      function renderFlannel() {
        ReactDOM.render(
          React.createElement(Flannel, props, [
            React.createElement(FlannelHeader, headerProps),
            React.createElement(FlannelContent, null, 'Hello, World!')
          ]),
          document.getElementById('flannel-container')
        );
      }

      function maybeCloseFlannel(event) {
        if (event && event.target.getAttribute('id') === 'safe-target') {
          return; // Don't close the flannel.
        }
        ReactDOM.unmountComponentAtNode(document.getElementById('flannel-container'));
      }

      $(document.documentElement).on(
        'keyup',
        function(event) {
          if (event.key === 'm') {
            moveTarget();
          }
        }
      );
      renderButton();
    });
  </script>
<% end %>
