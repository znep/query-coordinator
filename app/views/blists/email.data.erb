<%- content_for :headline do -%>
  <h1>Email this <%= t(:blist_name).capitalize %></h1>
<%- end -%>

<div class="modalContentWrapper emailDatasetWrapper">
  <div class="errorMessage"></div>
  <% form_tag("/views/#{@view.id}/rows.html") do %>
    <label class="formHeader" for="emailAddress">Email address to send this <%= t(:blist_name).downcase %> to:</label>
    <div class="formContainer">
      <ul class="emailFields">
        <li>
          <%= text_field_tag("emailAddress", (current_user ? current_user.email : "")) %>
          <a class="emailFormRemoveButton" href="#remove">Remove</a>
        </li>
      </ul>
      <ul class="actionButtons">
        <li><a id="emailFormMoreButton" href="#add">Add More</a></li>
      </ul>
    </div>
  
    <div class="submitLine clearfix">
      <ul class="submitActions">
        <li><div class="loadingIndicator hide">Sending...</div></li>
        <li>
          <ul class="actionButtons">
            <li><a id="emailFormSubmitButton" class="arrowButton" href="#submit">Send Email</a></li>
          </ul>
        </li>
        <li class="cancelButton"><a href="#close_print" class="jqmClose"><span>Cancel</span></a></li>
      </ul>
    </div>
  <% end %>
  <div class="successMessage hide">
    <p>The requested email has been successfully sent.</p>
    <div class="submitLine clearfix">
      <ul class="submitActions">
        <li>
          <ul class="actionButtons">
            <li><a class="arrowButton jqmClose" href="#submit">Done</a></li>
          </ul>
        </li>
      </ul>
    </div>
  </div>
</div>


<script type="text/javascript" charset="utf-8">
  blist.common.modalReady = function()
  {
    var $form = $('.emailDatasetWrapper form');
    $form.validate({
      rules: {
        "emailAddress": "email"
      },
      messages: {
        "emailAddress": "That does not look like a valid email address."
      }
    });

    // Add an email field to the list and wire up validation
    var numberAdded = 0;
    var numberRemoved = 0;
    $('#emailFormMoreButton').click(function(event)
    {
      event.preventDefault();

      if ($(this).hasClass("disabled"))
      {
        return;
      }

      var $container = $('<li/>');
      var $textField = $('<input type="text"/>')
        .attr('name', 'emailAddress' + numberAdded++)
        .appendTo($container);
      $container.append(' ');
      $('<a class="emailFormRemoveButton" href="#remove">Remove</a>').appendTo($container);
      $container.appendTo('.emailDatasetWrapper .emailFields');

      // Validation
      $textField.rules('add', {
        email: true,
        messages: {
          email: 'That does not look like a valid email address.'
        }
      });

      if (numberAdded - numberRemoved > 14)
      {
        $(this).addClass("disabled");
      }
    });

    // Remove an email from or clear the last field
    $('.emailFormRemoveButton').live('click', function(event)
    {
      event.preventDefault();
      if ($('.formContainer input').size() == 1)
      {
        $('.formContainer input').val('');
        return;
      }

      $(this).closest('li').remove();
      numberRemoved++;

      $('#emailFormMoreButton').removeClass("disabled");
    });
    
    var submitForm = function(event)
    {
      event.preventDefault();

      // Must enter one email
      if ($('.formContainer input[value!=""]').size() == 0)
      {
        $('.emailDatasetWrapper .errorMessage').text('Please enter at least one email address.');
        return;
      }
      $('.emailDatasetWrapper .errorMessage').text('');

      // Remove empty boxes
      $('.formContainer input').each(function()
      {
        if ($(this).val() === "")
        {
          $(this).closest('li').remove();
        }
      });

      if ($form.valid())
      {
        $('.emailDatasetWrapper .loadingIndicator').removeClass('hide');

        var $fields = $('.formContainer input');
        var totalRequests = $fields.size();
        var completed = 0;
        var requestComplete = function()
        {
          $('.emailDatasetWrapper .loadingIndicator').addClass('hide');
          if ($('.formContainer input').length > 0)
          {
            $('.emailDatasetWrapper .errorMessage')
              .text('Emails could not be sent to the following addresses. Please try again later.')
              .show();
          }
          else
          {
            $('.emailDatasetWrapper form').hide();
            $('.emailDatasetWrapper .successMessage').show();
          }
        };
        $fields.each(function()
        {
          var $field = $(this);
          $.ajax({
            url: $form.attr("action"),
            cache: false,
            data: {
              'method': 'email',
              'email': $field.val()
            },
            success: function (responseData)
            {
              if (responseData['error'] === undefined)
              {
                $field.closest('li').remove();
              }
              if (++completed == totalRequests)
              {
                requestComplete();
              }
            },
            error: function (request, status, error)
            {
              if (++completed == totalRequests)
              {
                requestComplete();
              }
            }
          });
        });
      }
    };

    // Validate, then fire off a request for each email
    $form.submit(submitForm);
    $('#emailFormSubmitButton').click(submitForm);
  };
</script>