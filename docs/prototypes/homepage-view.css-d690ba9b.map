{"version":3,"sources":["../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","../../../src/scss/variables/_colors.scss","homepage-view.scss","homepage-view.css","../../../node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss","../../../node_modules/modularscale-sass/stylesheets/modular-scale/_round-px.scss","../../../node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_media.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_outer-container.scss","../../../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_row.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_span-columns.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_private.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_shift.scss"],"names":[],"mappings":"AAGE;;;;GAQI;;ACXN;EAkBA,uBAAA,EAA0B;;AAoB1B;EAKA,oBAAoB,EAAA;;AAsBpB,yBAAmB;AAkInB,0BAAY;AAYZ,yBAAoB;AAGpB,WAAA;ACxMA,oBAAU;ACOV,gBDNe;ACOf,mBDNO;ACOP,YDNO;ACOP,oBDHe;ACIf,iBDHc;ACId;EDDA,6BAAY;EACV,qCAAU;ECGV,0ODF+B;ECG/B,oBDFO;ECGP,mBAAmB,EAAE;;AAEvB;EDWE;IACA,6BAAW;IACX,iEAAe,EAAA,EAAA;;ACRjB;EACE,0BDCgB;ECAhB,eDCa;EAJf,WAAA;ECKE,eDQc;ECPd,gBDNF,EAAA;ECOE;IACE,eDSa;ICRb,gBAAgB,EAAE;EDTtB;IA6BG,aExCU,EAAA;IFyCV;MCjBG,kBAAkB;MDbxB,+BA2BC,EAKC;;AChBF;EDmBG,eGlEc;EH+BjB,gBAAA,EAAA;;ACoBA;EACE,cAAc;EDrBhB,kBAAA;EA8CG,cAyCA,EAAA;EAvFH;IAkDI,eD1CW;IC2CX,oBAAe,EAAA;;ACvBnB;EACE,UDyBE,EAAU;ECxBZ;ID0BE,eAAe;IAxDnB,eAAA;ICiCI,uBG5CM;IJWV,gBAAA;IAgEK,8BI3EQ;IJ4ER,mBACA;IAlEL,sBAAA,EA4CC;IA0BG;MAtEJ,0BA4CC,EAAA;ECJC;IACE,8BDgCoB;IC/BpB,iBDgCiB,EAAA;EA1ErB;IAiFI,cGhHQ,EAAK;IHiHb;MACA,YAAa;MACb,eAAgB;MCpCd,mBAAmB,EAAE;ED2C3B;IAMG,iBAKA;IK7EC,cAAM;ILkEV,iBAAA;ICtCI,0BDiDD,EAAA;;AAXH;EAcG,cAAS,EAAQ;EKhFhB;ILkEJ;MAiBI,iBAED,EAAA,EAAA;;AAnBH;EAuBE,iBD5GU,EAAA;EC6GV;IACA;MCnDI,cAAc,EAAE,EAAE;;AAExB;EDsDE,YGxJU;EHyJV,sBA+BA;EA9DF,iBAAA,EA4BC;;AC/CD;EACE,cDkBF;ECjBE,gBDuDE;ECtDF,iBDgBF,EAAA;ECfE;IDeF,YAAA;IAgDG,sBAAa,EAAA;IACb;MACA,2BAAiB,EAAA;IACjB;MAnDH,gBA4BC,EAAA;ECpCC;IDQF,+BAuDE;IC7DE,mBEpHa;IFqHb,iBAAiB;IDsErB,oBAAS,EAAA;EM7JP;IACA,iBACa,EAAA;IADb;MN4JF,gBACQ,EAAA;;AChER;EACE,kBM3Gc;EN4Gd,kBM3Gc;EN4Gd,mBM1GC,EAAA;EN2GD;IDkEF,iBAAO,EAAA;EQpJH;IRsJH,YAAA;IACA,YAAY;IACZ,eGtMgB,EAAA;;AFuIjB;EACE,eMtHc;ENuHd,0BMtHc;ENuHd,kBMtHiB;EP8KnB,cAOG;EC7DD,YFvGM,EAAI;EEwGV;ID+DA,YAAW;IAVb,YAOE;ICzDE,eD8DD,EAAe;EAZlB;IAiBE,YAAY;IACZ,sBAAW;IAlBb,iBAqBY,EAAA;IAEV;MKjKE,2BAAqB,EAAE;EJ+FzB;IACE,iBO1GS;IP2GT,2BD8DO,EOtMA;ENyIT;IACE,mBMxIY,EAAA;INyIZ;MIpGA;QL0IJ,eAqBW,EAAC;QAST;US/JC,YAAO;UAGL,YAAe;UAef,eCtEI,EAAA,EAAA;ITsJN;MACE;QACE,iBQ9E+B;QT2GjC,YAmCL;QACC,eAIA;QAxCF,uBAqCI;QACD,iBACA,EAAA;QKjLO;UL0IJ,gBA2CM,EAAA,EAAA;ECjEV;IACE,cQzGW,EAAM;IR0GjB;MQ1FE,eC5EI,EAAU;ETwKlB;IACE;MIzHA,YAAM;ML0IV,eA2CW;MS5KP,uBAAO;MAGL,iBAAe,EAAA;MAef;QACA,gBC5Ec,EVqPlB,EAAA;ECrEA;IACE;MDSJ,YA2CC;MClDK,eUhJkC;MXuJxC,uBA6DY;MQjNR,iBAAe,EAAA;MRmNjB;QACA,gBAAmB,EAAA;MACnB;QACA,qBAEA,EAAA,EAAA;ECpEA;IACE,eMjLY;INkLZ,iBMjLY;INkLZ,mBMhLD;INiLC,gBAAgB;IAChB,eAAe,EAAE;IACjB;MACE,YAAY;MACZ,YAAY;MACZ,eAAe,EAAE","file":"homepage-view.css","sourcesContent":["@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","/* Base Palette Colors */\n$primary: #288dc1;\n$primary-text: shade($primary, 14%);\n$alternate-1: #e28432;\n$alternate-1-text: shade($alternate-1, 30%);\n$alternate-2: #00a1af;\n$alternate-2-text: #00717c;\n$alternate-3: #00be9b;\n$alternate-3-text: shade($alternate-3, 20%);\n$alternate-4: tint(#425363, 40%);\n$alternate-4-text: shade($alternate-4, 40%);\n$success: lighten(#218649, 10%);\n$success-text: shade($success, 14%);\n$error: #ce6565;\n$error-text: shade($error, 14%);\n$warning: shade(#fabe00, 8%);\n$warning-text: shade($warning, 40%);\n\n/* Colors light version */\n$primary-light: tint($primary, 90%);\n$alternate-1-light: tint($alternate-1, 90%);\n$alternate-2-light: tint($alternate-2, 90%);\n$alternate-3-light: tint($alternate-3, 90%);\n$alternate-4-light: tint($alternate-4, 90%);\n$success-light: tint($success, 90%);\n$error-light: tint($error, 90%);\n$warning-light: tint($warning, 93%);\n\n/* Colors dark version */\n$primary-dark: shade($primary, 30%);\n$alternate-1-dark: shade($alternate-1, 30%);\n$alternate-2-dark: shade($alternate-2, 30%);\n$alternate-3-dark: shade($alternate-3, 30%);\n$alternate-4-dark: shade($alternate-4, 30%);\n$success-dark: shade($success, 30%);\n$error-dark: shade($error, 30%);\n$warning-dark: shade($warning, 30%);\n\n/* Greys */\n$white: #fff;\n$grey: #767676;\n$black: #2c2c2c;\n\n/* Shades of Grey */\n$light-grey-0: tint($grey, 10%);\n$light-grey-1: tint($grey, 20%);\n$light-grey-2: tint($grey, 40%);\n$light-grey-3: tint($grey, 60%);\n$light-grey-4: tint($grey, 80%);\n$light-grey-5: tint($grey, 90%);\n$light-grey-6: tint($grey, 93.3%);\n$light-grey-7: tint($grey, 95%);\n$light-grey-8: tint($grey, 97%);\n\n$dark-grey-0: shade($grey, 10%);\n$dark-grey-1: shade($grey, 20%);\n$dark-grey-2: shade($grey, 40%);\n$dark-grey-3: shade($grey, 60%);\n\n/* Color Vars */\n$default-text-color: $dark-grey-1;\n$quiet-text-color: $grey;\n$light-text-color: $white;\n$light-grey-bg: $light-grey-5;\n\n/* Button Colors */\n$btn-active-box-shadow-color: $black;\n\n$btn-default-color: $grey;\n$btn-default-background-color: $white;\n$btn-default-border-color: $light-grey-3;\n$btn-default-hover-color: $dark-grey-0;\n$btn-default-hover-background-color: $light-grey-5;\n$btn-default-active-border-color: shade($white, 20%);\n\n$btn-simple-color: $dark-grey-1;\n$btn-simple-background-color: $light-grey-5;\n$btn-simple-hover-color: $dark-grey-1;\n$btn-simple-hover-background-color: $light-grey-4;\n\n$btn-default-dark-color: $white;\n$btn-default-dark-background-color: $grey;\n$btn-default-dark-border-color: $grey;\n$btn-default-dark-hover-background-color: shade($grey, 20%);\n\n$btn-default-busy-border-color: $white;\n$btn-default-busy-border-right-color: $light-grey-2;\n$btn-default-inverse-color: $white;\n$btn-default-inverse-background-color: transparent;\n$btn-default-inverse-border-color: $white;\n$btn-default-inverse-hover-color: $grey;\n$btn-default-inverse-hover-background-color: white;\n$btn-default-inverse-hover-border-color: transparent;\n\n$btn-primary-color: $white;\n$btn-primary-background-color: $primary-text;\n$btn-primary-border-color: $primary;\n$btn-primary-hover-background-color: shade($primary, 27%);\n$btn-primary-active-border-color: shade($primary, 10%);\n$btn-primary-inverse-color: $primary-text;\n$btn-primary-inverse-background-color: $white;\n$btn-primary-inverse-hover-color: $white;\n$btn-primary-inverse-hover-background-color: $primary-text;\n$btn-primary-busy-border-right-color: tint($primary, 20%);\n\n$btn-alternate-1-color: $white;\n$btn-alternate-1-background-color: shade($alternate-1, 23%);\n$btn-alternate-1-border-color: $alternate-1;\n$btn-alternate-1-hover-background-color: shade($alternate-1, 31%);\n$btn-alternate-1-hover-color: $white;\n$btn-alternate-1-active-border-color: shade($alternate-1, 10%);\n$btn-alternate-1-inverse-color: $alternate-1-text;\n$btn-alternate-1-inverse-background-color: $alternate-1-light;\n$btn-alternate-1-inverse-hover-color: $white;\n$btn-alternate-1-inverse-hover-background-color: $alternate-1;\n$btn-alternate-1-busy-border-right-color: tint($alternate-1, 20%);\n\n$btn-alternate-2-color: $white;\n$btn-alternate-2-background-color: $alternate-2-text;\n$btn-alternate-2-border-color: $alternate-2;\n$btn-alternate-2-hover-background-color: shade($alternate-2-text, 20%);\n$btn-alternate-2-hover-color: $white;\n$btn-alternate-2-active-border-color: shade($alternate-2, 10%);\n$btn-alternate-2-inverse-color: $alternate-2-text;\n$btn-alternate-2-inverse-background-color: $white;\n$btn-alternate-2-inverse-hover-color: $white;\n$btn-alternate-2-inverse-hover-background-color: $alternate-2-text;\n$btn-alternate-2-busy-border-right-color: tint($alternate-2, 20%);\n\n$btn-alternate-3-color: $white;\n$btn-alternate-3-background-color: $alternate-3;\n$btn-alternate-3-border-color: $alternate-3;\n$btn-alternate-3-hover-background-color: shade($alternate-3, 20%);\n$btn-alternate-3-active-border-color: shade($alternate-3, 10%);\n$btn-alternate-3-inverse-color: $alternate-3;\n$btn-alternate-3-inverse-background-color: $white;\n$btn-alternate-3-inverse-hover-color: $white;\n$btn-alternate-3-inverse-hover-background-color: $alternate-3;\n$btn-alternate-3-busy-border-right-color: tint($alternate-3, 20%);\n\n$btn-alternate-4-color: $white;\n$btn-alternate-4-background-color: $alternate-4;\n$btn-alternate-4-border-color: $alternate-4;\n$btn-alternate-4-hover-background-color: shade($alternate-4, 20%);\n$btn-alternate-4-active-border-color: shade($alternate-4, 10%);\n$btn-alternate-4-inverse-color: $alternate-4;\n$btn-alternate-4-inverse-background-color: $white;\n$btn-alternate-4-inverse-hover-color: $white;\n$btn-alternate-4-inverse-hover-background-color: $alternate-4;\n$btn-alternate-4-busy-border-color: $white;\n$btn-alternate-4-busy-border-right-color: tint($alternate-4, 20%);\n\n$btn-warning-color: $white;\n$btn-warning-background-color: $warning;\n$btn-warning-border-color: $warning;\n$btn-warning-hover-background-color: shade($warning, 20%);\n$btn-warning-active-border-color: shade($warning, 10%);\n$btn-warning-inverse-color: $warning;\n$btn-warning-inverse-background-color: $white;\n$btn-warning-inverse-hover-color: $white;\n$btn-warning-inverse-hover-background-color: $warning;\n\n$btn-success-color: $white;\n$btn-success-background-color: $success;\n$btn-success-border-color: $success;\n$btn-success-hover-background-color: shade($success, 20%);\n$btn-success-active-border-color: shade($success, 10%);\n$btn-success-inverse-color: $success-text;\n$btn-success-inverse-background-color: $white;\n$btn-success-inverse-hover-color: $white;\n$btn-success-inverse-hover-background-color: $success;\n\n$btn-error-color: $white;\n$btn-error-background-color: $error;\n$btn-error-border-color: $error;\n$btn-error-hover-background-color: shade($error, 20%);\n$btn-error-active-border-color: shade($error, 10%);\n$btn-error-inverse-color: $error;\n$btn-error-inverse-background-color: $white;\n$btn-error-inverse-hover-color: $white;\n$btn-error-inverse-hover-background-color: $error;\n\n$btn-transparent-busy-border-color: $dark-grey-1;\n$btn-transparent-busy-border-right-color: $light-grey-2;\n\n$btn-disabled-color: $grey;\n$btn-disabled-border-color: $light-grey-1;\n$btn-disabled-background-color: $light-grey-3;\n$btn-disabled-dark-color: $light-grey-1;\n$btn-disabled-dark-border-color: $grey;\n$btn-disabled-dark-background-color: $dark-grey-1;\n\n$tag-color: $dark-grey-2;\n$tag-background-color: $light-grey-5;\n\n/* Header */\n$header-bg-color: #4a4747;\n$header-text-color: $white;\n$header-accent-color: #ddd;\n$header-link-hover-color: #7ac3ff;\n$header-link-hover-bg-color: #2295e1;\n$header-box-shadow-color: rgba(0, 0, 0, 0.2);\n$header-story-title-color: $light-grey-4;\n$header-story-title-hover-color: $white;\n$header-btn-disabled-color: #777;\n$header-publication-status-color: #e0e0e0;\n\n/* Settings Panel */\n$settings-panel-btn-color: $grey;\n\n/* Backgrounds */\n$light-gray-bg: $light-grey-3;\n$almost-white-bg: $light-grey-5;\n$panel-border-color: $light-grey-4;\n$panel-internal-border-color: $light-grey-5;\n\n","@import \"breakpoint\";\n@import \"modular-scale\";\n\n// Style Components\n@import \"bourbon\";\n@import \"neat\";\n\n@import \"variables/colors\";\n@import \"variables/typography\";\n\n@font-face {\n  font-family: \"socrata-icons\";\n  src: url(\"/fonts/socrata-icons.eot\");\n  src: url(\"/fonts/socrata-icons.eot?#iefix\") format(\"embedded-opentype\"),\n       url(\"/fonts/socrata-icons.woff\") format(\"woff\"),\n       url(\"/fonts/socrata-icons.ttf\") format(\"truetype\"),\n       url(\"/fonts/socrata-icons.svg#socrata-icons\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: \"socrata-icons\";\n    src: url(\"/fonts/socrata-icons.svg#socrata-icons\") format(\"svg\");\n  }\n}\n\n// Media Queries\n$tablet: 769px;\n$desktop: 992px;\n\n\n.prototypes_homepage_view {\n\t.menu {\n\t\t> * {\n\t\t\tmargin-left: 0;\n\t\t\tmargin-right: 0;\n\t\t}\n\t\tbackground-color: $light-grey-6;\n\t\tcolor: $grey;\n\t\twidth: 90%;\n\t\tmargin-left: 0;\n\t\tmargin-right: 0;\n\n\t\t&.menu-offscreen {\n\t\t\tright: -120%;\n\n\t\t\t&.menu-anchor-right {\n\t\t\t\tborder-left: none;\n\t\t\t\tbox-shadow: 0 8px 30px $light-grey-1;\n\n\t\t\t\t&.active {\n\t\t\t\t\t//right: -20%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t.menu-header {\n\t\th2 {\n\t\t\tcolor: $dark-grey-3;\n\t\t\tfont-size: ms(2);\n\t\t}\n\t\t.menu-header-dismiss {\n\t\t\tpadding: ms(-3);\n\t\t\ttext-align: right;\n\t\t\tpadding: ms(-5);\n\n\t\t\t&:hover {\n\t\t\t\tcolor: $dark-grey-3;\n\t\t\t\tbackground: $light-grey-4;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu-content {\n\t\t.list-menu {\n\t\t\tmargin: 0;\n\n\t\t\tli {\n\t\t\t\ta.menu-link{\n\t\t\t\tcolor: $black;\n\t\t\t\tdisplay: block;\n\t\t\t\tbackground-color: $white;\n\t\t\t\tfont-size: ms(0);\n\t\t\t\tborder-top: 1px solid $light-grey-5;\n\t\t\t\tpadding: ms(0) ms(-2);\n\t\t\t\ttext-decoration: none;\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tbackground-color: $light-grey-7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t&.divider {\n\n\t\t\t\ta {\n\t\t\t\t\tborder-top: 1px solid $light-grey-4;\n\t\t\t\t\tmargin-top: ms(8);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.user-action {\n\t\t\t\tpadding: ms(-2);\n\t\t\t\ta.btn-block {\n\t\t\t\t\t    width: 100%;\n    \t\t\t\t\tdisplay: block;\n    \t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t}\n\n\t\t\t.menu-section-header {\n\t\t\t\tmargin-top: ms(2);\n\t\t\t\tpadding: ms(-2);\n\t\t\t\tfont-weight: 300;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\n\t\t}\n\t}\n}\n\n.responsive-navbar {\n\n\n\t.responsive-navbar-nav {\n\n\t\t&.desktop {\n\t\t\tdisplay: none;\n\n\t\t\t@include media($tablet) {\n\t\t\t\tdisplay: inherit;\n\t\t\t}\n\t\t}\n\n\t\t&.mobile {\n\t\t\tdisplay: inherit;\n\n\t\t\t@include media($tablet) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t.site-display-name a {\n\t\tcolor: $white;\n\t\ttext-decoration: none;\n\t\tfont-weight: 300;\n\t}\n\n\t.nav-links {\n\t\tmargin-top: 0;\n\t\tfont-size: ms(0);\n\t\tfont-weight: 300;\n\n\n\t\ta {\n\t\t\tcolor: $white;\n\t\t\ttext-decoration: none;\n\t\t\t&:hover {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\n\t\t\t&.social-link {\n\t\t\t\tfont-size: ms(1);\n\t\t\t}\n\n\t\t}\n\n\t\t.divider a {\n\t\t\tborder-left: 1px solid #3DC492;\n\t\t\tpadding-left: 1rem;\n\t\t\tpadding-top: 8px;\n\t\t\tpadding-bottom: 8px;\n\n\t\t}\n\n\t\t#sign-in-toggle {\n\t\t\tfont-weight: 500;\n\t\t\t.socrata-icon-user {\n\t\t\t\tfont-size: ms(1);\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n.content {\n\t&.page {\n\t\tmin-height: 60vh;\n\t}\n\t@include outer-container();\n}\n\nfooter {\n\t@include row();\n\tbackground-color: $dark-grey-3;\n\tmin-height: 200px;\n\tpadding: ms(8);\n\tcolor: $white;\n\n\ta {\n\t\tcolor: $white;\n\t\ttext-decoration: none;\n\t\tfont-weight: 300;\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\timg {\n\t\tmax-height: 80px;\n\t\tmax-width: 100% !important;\n\t}\n\n\t.site-logo {\n\n\t\ttext-align: center;\n\n\t\t@include media($tablet) {\n\t\t\t@include row();\n\t\t}\n\n\t\t@include media($desktop) {\n\t\t\ttext-align: left;\n\t\t\t@include span-columns(5);\n\t\t}\n\t}\n\n\t.social-links ul {\n\t\tmargin-top: 0;\n\t\ta {\n\t\t\tcolor: darken($white, 20%);\n\t\t}\n\t}\n\n\n\t.links-col {\n\n\t\t@include media($tablet) {\n\t\t\t@include span-columns(4);\n\t\t}\n\n\t\t@include media($desktop) {\n\n\t\t\t@include span-columns(2);\n\t\t\t&.first {\n\t\t\t\t@include shift(1);\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\t.copyright {\n\t\t@include row();\n\t\tmargin-top: ms(10);\n\t\ttext-align: center;\n\t\tfont-size: ms(-1);\n\t\tcolor: darken($white, 20%);\n\n\t}\n\n}\n\n","/*!\n * Socrata Styleguide v11.7.1\n * Copyright 2015-2017 undefined\n * Licensed under undefined\n */\n\nhtml {\n  box-sizing: border-box; }\n\n*, *::after, *::before {\n  box-sizing: inherit; }\n\n/* Base Palette Colors */\n/* Colors light version */\n/* Colors dark version */\n/* Greys */\n/* Shades of Grey */\n/* Color Vars */\n/* Button Colors */\n/* Header */\n/* Settings Panel */\n/* Backgrounds */\n@font-face {\n  font-family: \"socrata-icons\";\n  src: url(\"/fonts/socrata-icons.eot\");\n  src: url(\"/fonts/socrata-icons.eot?#iefix\") format(\"embedded-opentype\"), url(\"/fonts/socrata-icons.woff\") format(\"woff\"), url(\"/fonts/socrata-icons.ttf\") format(\"truetype\"), url(\"/fonts/socrata-icons.svg#socrata-icons\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  @font-face {\n    font-family: \"socrata-icons\";\n    src: url(\"/fonts/socrata-icons.svg#socrata-icons\") format(\"svg\"); } }\n\n.prototypes_homepage_view .menu {\n  background-color: #f6f6f6;\n  color: #767676;\n  width: 90%;\n  margin-left: 0;\n  margin-right: 0; }\n  .prototypes_homepage_view .menu > * {\n    margin-left: 0;\n    margin-right: 0; }\n  .prototypes_homepage_view .menu.menu-offscreen {\n    right: -120%; }\n    .prototypes_homepage_view .menu.menu-offscreen.menu-anchor-right {\n      border-left: none;\n      box-shadow: 0 8px 30px #919191; }\n\n.prototypes_homepage_view .menu-header h2 {\n  color: #2f2f2f;\n  font-size: 19px; }\n\n.prototypes_homepage_view .menu-header .menu-header-dismiss {\n  padding: 11px;\n  text-align: right;\n  padding: 10px; }\n  .prototypes_homepage_view .menu-header .menu-header-dismiss:hover {\n    color: #2f2f2f;\n    background: #e4e4e4; }\n\n.prototypes_homepage_view .menu-content .list-menu {\n  margin: 0; }\n  .prototypes_homepage_view .menu-content .list-menu li a.menu-link {\n    color: #2c2c2c;\n    display: block;\n    background-color: #fff;\n    font-size: 15px;\n    border-top: 1px solid #f1f1f1;\n    padding: 15px 12px;\n    text-decoration: none; }\n    .prototypes_homepage_view .menu-content .list-menu li a.menu-link:hover {\n      background-color: #f8f8f8; }\n  .prototypes_homepage_view .menu-content .list-menu li.divider a {\n    border-top: 1px solid #e4e4e4;\n    margin-top: 26px; }\n  .prototypes_homepage_view .menu-content .list-menu li.user-action {\n    padding: 12px; }\n    .prototypes_homepage_view .menu-content .list-menu li.user-action a.btn-block {\n      width: 100%;\n      display: block;\n      text-align: center; }\n  .prototypes_homepage_view .menu-content .list-menu .menu-section-header {\n    margin-top: 19px;\n    padding: 12px;\n    font-weight: 300;\n    text-transform: uppercase; }\n\n.responsive-navbar .responsive-navbar-nav.desktop {\n  display: none; }\n  @media screen and (min-width: 769px) {\n    .responsive-navbar .responsive-navbar-nav.desktop {\n      display: inherit; } }\n\n.responsive-navbar .responsive-navbar-nav.mobile {\n  display: inherit; }\n  @media screen and (min-width: 769px) {\n    .responsive-navbar .responsive-navbar-nav.mobile {\n      display: none; } }\n\n.responsive-navbar .site-display-name a {\n  color: #fff;\n  text-decoration: none;\n  font-weight: 300; }\n\n.responsive-navbar .nav-links {\n  margin-top: 0;\n  font-size: 15px;\n  font-weight: 300; }\n  .responsive-navbar .nav-links a {\n    color: #fff;\n    text-decoration: none; }\n    .responsive-navbar .nav-links a:hover {\n      text-decoration: underline; }\n    .responsive-navbar .nav-links a.social-link {\n      font-size: 17px; }\n  .responsive-navbar .nav-links .divider a {\n    border-left: 1px solid #3DC492;\n    padding-left: 1rem;\n    padding-top: 8px;\n    padding-bottom: 8px; }\n  .responsive-navbar .nav-links #sign-in-toggle {\n    font-weight: 500; }\n    .responsive-navbar .nav-links #sign-in-toggle .socrata-icon-user {\n      font-size: 17px; }\n\n.content {\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto; }\n  .content.page {\n    min-height: 60vh; }\n  .content::after {\n    clear: both;\n    content: \"\";\n    display: table; }\n\nfooter {\n  display: block;\n  background-color: #2f2f2f;\n  min-height: 200px;\n  padding: 26px;\n  color: #fff; }\n  footer::after {\n    clear: both;\n    content: \"\";\n    display: table; }\n  footer a {\n    color: #fff;\n    text-decoration: none;\n    font-weight: 300; }\n    footer a:hover {\n      text-decoration: underline; }\n  footer img {\n    max-height: 80px;\n    max-width: 100% !important; }\n  footer .site-logo {\n    text-align: center; }\n    @media screen and (min-width: 769px) {\n      footer .site-logo {\n        display: block; }\n        footer .site-logo::after {\n          clear: both;\n          content: \"\";\n          display: table; } }\n    @media screen and (min-width: 992px) {\n      footer .site-logo {\n        text-align: left;\n        float: left;\n        display: block;\n        margin-right: 2.35765%;\n        width: 40.29137%; }\n        footer .site-logo:last-child {\n          margin-right: 0; } }\n  footer .social-links ul {\n    margin-top: 0; }\n    footer .social-links ul a {\n      color: #cccccc; }\n  @media screen and (min-width: 769px) {\n    footer .links-col {\n      float: left;\n      display: block;\n      margin-right: 2.35765%;\n      width: 31.76157%; }\n      footer .links-col:last-child {\n        margin-right: 0; } }\n  @media screen and (min-width: 992px) {\n    footer .links-col {\n      float: left;\n      display: block;\n      margin-right: 2.35765%;\n      width: 14.70196%; }\n      footer .links-col:last-child {\n        margin-right: 0; }\n      footer .links-col.first {\n        margin-left: 8.5298%; } }\n  footer .copyright {\n    display: block;\n    margin-top: 29px;\n    text-align: center;\n    font-size: 13px;\n    color: #cccccc; }\n    footer .copyright::after {\n      clear: both;\n      content: \"\";\n      display: table; }\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@function ms-round-px($Result) {\n  @if unit($Result) == 'px' {\n    @return round($Result);\n  }\n  @return $Result;\n}","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centering it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.\n///\n/// @param {String} $display [default]\n///  Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.\n///\n/// @param {String} $direction [$default-layout-direction]\n///  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n///\n/// @example scss - Usage\n///  .element {\n///    @include row();\n///  }\n///\n/// @example css - CSS Output\n///  .element {\n///    *zoom: 1;\n///    display: block;\n///  }\n///\n/// .element:before, .element:after {\n///   content: \" \";\n///   display: table;\n/// }\n///\n/// .element:after {\n///   clear: both;\n/// }\n\n@mixin row($display: default, $direction: $default-layout-direction) {\n  @if $direction != $default-layout-direction {\n    @include -neat-warn(\"The $direction argument will be deprecated in future versions in favor of the direction(){...} mixin.\");\n  }\n\n  $layout-direction: $direction !global;\n\n  @if $display != default {\n    @include -neat-warn(\"The $display argument will be deprecated in future versions in favor of the display(){...} mixin.\");\n  }\n\n  @if $display == table {\n    display: table;\n    @include fill-parent;\n    table-layout: fixed;\n    $container-display-table: true !global;\n  } @else {\n    @include clearfix;\n    display: block;\n    $container-display-table: false !global;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display property of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n","@charset \"UTF-8\";\n\n/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\n///\n/// @param {Number (unitless)} $n-columns [1]\n///   Number of columns by which the element shifts.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -25.58941%;\n///   }\n\n@mixin shift($n-columns: 1) {\n  @include shift-in-context($n-columns);\n}\n\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\n///\n/// @param {List} $shift\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\n///\n///   The two values can be separated with any string such as `of`, `/`, etc.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3 of 6);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -52.41458%;\n///   }\n\n@mixin shift-in-context($shift: $columns of $container-columns) {\n  $n-columns: nth($shift, 1);\n  $parent-columns: container-shift($shift) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\n\n  // Reset nesting context\n  $parent-columns: $grid-columns !global;\n}\n"],"sourceRoot":"/source/"}