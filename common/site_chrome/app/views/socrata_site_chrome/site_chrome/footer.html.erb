<% begin %>
  <% if using_custom_header_footer? %>
    <%= render 'custom_content/custom',
      :section => 'footer',
      :content => site_chrome_custom_header_footer_content[:footer],
      :size => local_assigns[:size] %>
  <% else %>
    <footer id="site-chrome-footer" class="<%= local_assigns[:size] %>" role="contentinfo">
      <div class="footer-content <%= footer_title.present? ? 'title-present' : 'title-absent' %>">
        <div class="logo">
          <%= footer_logo %>
        </div>
        <div class="links">
          <ul class="links-col">
            <% site_chrome_instance.footer[:links].to_a.each do |link| %>
              <% link_text = localized("footer.links.#{link[:key]}", site_chrome_instance.locales) %>
              <% if valid_link_item?(link, link_text) %>
                <li>
                  <%= link_to(link_text, site_chrome_massage_url(link[:url]), :class => 'footer-link') %>
                </li>
              <% end %>
            <% end %>
          </ul>
        </div>
        <div class="addendum">
          <%= content_tag(:div, copyright, :class => 'site-chrome-copyright') if show_copyright? %>

          <%- if valid_social_links(site_chrome_instance.general[:social_shares]).present? -%>
            <div class="site-chrome-social-links">
              <%= render 'site_chrome/social_links' %>
            </div>
          <%- end -%>

          <%- if show_powered_by? -%>
            <span class="powered-by-socrata">
              <span class="powered-by"><%= t('shared.site_chrome.footer.powered_by') %></span>
              <a href="//socrata.com" target="_blank">
                <img class="logo" alt="Socrata" src="<%= powered_by_logo_src %>" />
              </a>
            </span>
          <%- end -%>

          <% if show_language_switcher? %>
            <%= render 'site_chrome/language_switcher', :orientation => 'top' %>
          <% end %>
        </div>
      </div>
    </footer>
  <% end %>
<% rescue StandardError, SyntaxError => e
  error_msg = "Site Chrome error parsing configuration: #{e.inspect}\n#{e.backtrace}"
  Rails.logger.debug(error_msg)
  ::Airbrake.notify(
    :error_class => 'InvalidSiteChromeConfiguration',
    :error_message => error_msg
  )
  error_msg
end %>
