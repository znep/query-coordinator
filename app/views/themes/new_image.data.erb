<%- content_for(:wrapper_class, "newImage") -%>

<%- content_for :headline do -%>
  <h1>Upload a New Image</h1>
<%- end -%>

<div class="modalContentWrapper newImageWrapper">
  <div class="errorMessage"></div>
  <% form_tag('/img.txt', :id => "newImageForm") do %>
    <label for="new_image_name" class="required">Name the Image</label>
    <%= text_field_tag('new_image[name]') %>

    <label for="new_image_file" class="required">Choose a File</label>
    <div class="fileBrowseButtonListContainer">
      <ul id="fileBrowseButtonList" class="actionButtons">
        <li>
          <a id="imageBrowseButton" href="#upload">Browse for Image</a>
        </li>
      </ul>
    </div>
    <%= text_field_tag('new_image[file_name]', '', :readonly => true) %>

    <div class="submitLine clearfix">
      <span class="requiredText">Required Entry</span>
      <ul class="submitActions">
        <li class="hide"><div class="loadingIndicator">Uploading...</div></li>
        <li>
          <ul class="actionButtons">
            <li><a class="arrowButton" href="#submit" id="submitNewImage">Create</a></li>
          </ul>
        </li>
        <li class="cancelButton">
          <a href="#close_new" class="jqmClose"><span>Cancel</span></a>
        </li>
      </ul>
    </div>
  <% end %>
</div>


<script type="text/javascript" charset="utf-8">
  blist.common.modalReady = function()
  {
    var $form = $('#newImageForm');
    var imageValid = false;

    var $uploader = new AjaxUpload($('#imageBrowseButton'), {
      action: $form.attr('action'),
      autoSubmit: false,
      name: 'importFileInput',
      responseType: 'json',
      onChange: function (file, ext)
      {
        $form.find('#new_image_name[value=""]').val(file.replace(/[-_]/g, ' ').replace(/\.[^\.]+$/, ''));
        $form.find('#new_image_file_name').val(file);
        if (!(ext && /^(gif|jpg|jpeg|png)$/.test(ext)))
        {
          $('.newImageWrapper .errorMessage')
            .text('That does not appear to be a valid image type. Supported types are: .png, .gif, .jpg.')
            .show();
          imageValid = false;
        }
        else
        {
          $('.newImageWrapper .errorMessage').text('').hide();
          imageValid = true;
        }
      },
      onComplete: function (file, response)
      {
        if (typeof blist.common.imageUploadedHandler == 'function')
        {
          blist.common.imageUploadedHandler(response);
        }
        $('#modal').jqmHide();
      }
    });

    $form.validate({
      rules: 
      { 
        "new_image[name]": "required",
        "new_image[file_name]" : "required"
      },
      messages: 
      {  
        "new_image[name]": "You must name the image.",
        "new_image[file_name]": "You must provide a file to upload."
      }
    });

    $('#submitNewImage').click(function(event)
    {
      event.preventDefault();
      if ($form.valid() && imageValid)
      {
        $uploader._settings.action = $form.attr('action') +
          '?name=' + escape($form.find('#new_image_name').val()) +
          '&type=WIDGET_CUSTOMIZATION_LOGO'

        $uploader.submit();
        $('.newImageWrapper .submitActions li:has(.loadingIndicator)').removeClass('hide');
        $('.newImageWrapper .submitActions li:has(.actionButtons #submitNewImage)').hide();
      }
    });
  };
</script>