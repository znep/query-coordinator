<% content_for :head do %>
  <title>Example Usage: MetadataTable</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF8">
  <%= rendered_stylesheet_tag 'component_example_pages' %>
<% end %>

<section class="styleguide-section" id="color-picker">
  <p>
    <a class="btn btn-default" href='/internal/demos/components'><span class="socrata-icon-arrow-left"></span> Components</a>
  </p>
  <h2 class="styleguide-header">MetadataTable</h2>
  <div class="styleguide-example">
    <button class="btn btn-primary" id='load-real-view'>load from a real domain</button>
    <div id="component"></div>
  </div>
  <div class="styleguide-code-example" id="styleguide-code-example-1"></div>
</section>

<% content_for :scripts do %>
  <%= render_demos_javascript_environment %>
  <%= include_webpack_bundle 'component_example_pages/main.js' %>

  <script type="text/javascript" id="example-1">
    $(() => {
      const props = {
        coreView: {
          id: 'four-four',
          tags: [ 'tag 1', 'tag 2' ],
          attribution: 'Snu',
          category: 'demos!',
          metadata: {
            attachments: [
              {
                blobId: 'blobby-blob-id',
                filename: 'a-filename.png'
              },
              {
                name: 'totally legit download me',
                assetId: 'some-asset',
                filename: 'win32.scr'
              }
            ],
          },
          license: {
            name: 'Snu General Public License',
            logoUrl: 'https://placekitten.com/200/300',
            termsLink: 'https://example.com'
          },
          attributionLink: 'https://example.com',
          viewType: 'tabular',

          rowsUpdatedAt: new Date().getTime() / 1000 - 1000000,
          viewLastModified: new Date().getTime() / 1000,
          createdAt: new Date().getTime() / 1000 - 5000000,
          owner: {
            displayName: 'Snuffleupadata'
          },
          viewCount: 13,
          downloadCount: 37
        }
      };

      function render() {
        ReactDOM.render(
          React.createElement(components.MetadataTable, props),
          document.getElementById('component')
        );
      }

      render();
    });
  </script>
  <script type="text/javascript">
    $('#load-real-view').click(function() {
      var domain = prompt('domain', 'localhost');
      if (!domain) {
        return;
      }
      var uid = prompt('uid');
      if (!uid) {
        return;
      }
      $.get('https://' + domain + '/api/views/' + uid + '.json').then(
        function(view) {
          console.log('Got view:', view);
          ReactDOM.render(
            React.createElement(components.MetadataTable, {
              coreView: view
            }),
            document.getElementById('component')
          );
        },
        function(error) {
          console.error(error);
          alert(JSON.stringify(error));
        }
      );
    });
  </script>
<% end %>
